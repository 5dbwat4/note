{"version": 2, "width": 120, "height": 30, "timestamp": 1748275382, "env": {"SHELL": "/usr/bin/zsh", "TERM": "xterm-256color"}}
[0.780009, "o", "\u001b[1m\u001b[7m#\u001b[27m\u001b[1m\u001b[0m                                                                                                                       \r \r"]
[0.782965, "o", "\u001b]2;root@chunk-core-1:~/openmpi-5.0.7\u0007\u001b]1;~/openmpi-5.0.7\u0007"]
[0.788091, "o", "\u001b]7;file://chunk-core-1/root/openmpi-5.0.7\u001b\\"]
[0.835514, "o", "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32mâžœ  \u001b[36mopenmpi-5.0.7\u001b[00m \u001b[K"]
[0.836143, "o", "\u001b[?1h\u001b=\u001b[?2004h"]
[1.319913, "o", "o"]
[1.320753, "o", "\bom"]
[1.321635, "o", "p"]
[1.322437, "o", "i"]
[1.32332, "o", "_"]
[1.323888, "o", "i"]
[1.324753, "o", "n"]
[1.32543, "o", "f"]
[1.325984, "o", "o"]
[1.326775, "o", " -"]
[1.327392, "o", "-"]
[1.328163, "o", "a"]
[1.329153, "o", "l"]
[1.331454, "o", "l"]
[1.331828, "o", "\u001b[15D\u001b[7mo\u001b[7mm\u001b[7mp\u001b[7mi\u001b[7m_\u001b[7mi\u001b[7mn\u001b[7mf\u001b[7mo\u001b[7m \u001b[7m-\u001b[7m-\u001b[7ma\u001b[7ml\u001b[7ml\u001b[27m"]
[2.111034, "o", "\u001b[15D\u001b[27mo\u001b[27mm\u001b[27mp\u001b[27mi\u001b[27m_\u001b[27mi\u001b[27mn\u001b[27mf\u001b[27mo\u001b[27m \u001b[27m-\u001b[27m-\u001b[27ma\u001b[27ml\u001b[27ml"]
[2.11544, "o", "\u001b[15D\u001b[32mo\u001b[32mm\u001b[32mp\u001b[32mi\u001b[32m_\u001b[32mi\u001b[32mn\u001b[32mf\u001b[32mo\u001b[39m\u001b[6C"]
[2.11601, "o", "\u001b[?1l\u001b>\u001b[?2004l"]
[2.11918, "o", "\r\r\n"]
[2.119777, "o", "\u001b]2;ompi_info --all\u0007\u001b]1;ompi_info\u0007"]
[2.134177, "o", "                 Package: Open MPI root@chunk-core-1 Distribution\r\n                Open MPI: 5.0.7\r\n  Open MPI repo revision: v5.0.7\r\n   Open MPI release date: Feb 14, 2025\r\n                 MPI API: 3.1.0\r\n            Ident string: 5.0.7\r\n                  Prefix: /usr/local\r\n             Exec_prefix: /usr/local\r\n                  Bindir: /usr/local/bin\r\n                 Sbindir: /usr/local/sbin\r\n                  Libdir: /usr/local/lib\r\n                  Incdir: /usr/local/include\r\n                  Mandir: /usr/local/share/man\r\n               Pkglibdir: /usr/local/lib/openmpi\r\n              Libexecdir: /usr/local/libexec\r\n             Datarootdir: /usr/local/share\r\n                 Datadir: /usr/local/share\r\n              Sysconfdir: /usr/local/etc\r\n          Sharedstatedir: /usr/local/com\r\n           Localstatedir: /usr/local/var\r\n                 Infodir: /usr/local/share/info\r\n              Pkgdatadir: /usr/local/share/openmpi\r\n               Pkglibdir: /usr/local/lib/openmpi\r\n           Pkgincludedir: /usr/local/include/openmpi\r\n Configured architecture: x86_64-pc-linux-gnu\r\n"]
[2.135726, "o", "          Configure host: chunk-core-1\r\n           Configured by: root\r\n           Configured on: Mon May 26 15:13:06 UTC 2025\r\n          Configure host: chunk-core-1\r\n  Configure command line: \r\n                Built by: root\r\n                Built on: Mon May 26 04:01:35 PM UTC 2025\r\n              Built host: chunk-core-1\r\n              C bindings: yes\r\n             Fort mpif.h: no\r\n            Fort use mpi: no\r\n       Fort use mpi size: deprecated-ompi-info-value\r\n        Fort use mpi_f08: no\r\n Fort mpi_f08 compliance: The mpi_f08 module was not built\r\n  Fort mpi_f08 subarrays: no\r\n           Java bindings: no\r\n  Wrapper compiler rpath: runpath\r\n              C compiler: gcc\r\n     C compiler absolute: /bin/gcc\r\n  C compiler family name: GNU\r\n      C compiler version: 14.2.0\r\n             C char size: 1\r\n             C bool size: 1\r\n            C short size: 2\r\n              C int size: 4\r\n             C long size: 8\r\n      C short float size: 2\r\n            C float size: 4\r\n           C double size: 8\r\n      C long double size: 16\r\n          C pointer size: 8\r\n            C char align: 1\r\n            C bool align: skipped\r\n             C int align: 4\r\n     C short float align: 2\r\n           C float align: 4\r\n          C double align: 8\r\n     C long double align: 16\r\n            C++ compiler: g++\r\n   C++ compiler absolute: /bin/g++\r\n           Fort compiler: none\r\n       Fort compiler abs: none\r\n         Fort ignore TKR: no\r\n   Fort 08 assumed shape: no\r\n      Fort optional args: no\r\n          Fort INTERFACE: no\r\n    Fort ISO_FORTRAN_ENV: no\r\n       Fort STORAGE_SIZE: no\r\n      Fort BIND(C) (all): no\r\n      Fort ISO_C_BINDING: no\r\n Fort SUBROUTINE BIND(C): no\r\n       Fort TYPE,BIND(C): no\r\n Fort T,BIND(C,name=\"a\"): no\r\n            Fort PRIVATE: no\r\n           Fort ABSTRACT: no\r\n       Fort ASYNCHRONOUS: no\r\n          Fort PROCEDURE: no\r\n         Fort USE...ONLY: no\r\n           Fort C_FUNLOC: no\r\n Fort f08 using wrappers: no\r\n         Fort MPI_SIZEOF: no\r\n       Fort integer size: 0\r\n       Fort logical size: 0\r\n Fort logical value true: 77\r\n          Fort real size: skipped\r\n      Fort dbl prec size: skipped\r\n          Fort cplx size: skipped\r\n      Fort dbl cplx size: skipped\r\n      Fort integer align: skipped\r\n         Fort real align: skipped\r\n     Fort dbl prec align: skipped\r\n         Fort cplx align: skipped\r\n     Fort dbl cplx align: skipped\r\n             C profiling: yes\r\n   Fort mpif.h profiling: no\r\n  Fort use mpi profiling: no\r\n   Fort use mpi_f08 prof: no\r\n"]
[2.136528, "o", "          Thread support: posix (MPI_THREAD_MULTIPLE: yes, OPAL support: yes,\r\n                          OMPI progress: no, Event lib: yes)\r\n           Sparse Groups: no\r\n            Build CFLAGS: -O3 -DNDEBUG  -finline-functions -mcx16\r\n           Build FCFLAGS: \r\n           Build LDFLAGS: -L/usr/local/lib -L/usr/local/lib -L/usr/local/lib\r\n                          -Wl,-rpath -Wl,/usr/local/lib\r\n                          -Wl,--enable-new-dtags\r\n              Build LIBS: -lm -lhwloc -lpmix -levent_core -levent_pthreads\r\n          Wrapper CFLAGS: \r\n        Wrapper CXXFLAGS: \r\n         Wrapper FCFLAGS: \r\n         Wrapper LDFLAGS: -L${libdir}  -Wl,-rpath -Wl,${libdir}\r\n                          -Wl,--enable-new-dtags\r\n            Wrapper LIBS: -lmpi\r\n  Internal debug support: no\r\n  MPI interface warnings: yes\r\n     MPI parameter check: runtime\r\nMemory profiling support: no\r\n"]
[2.136948, "o", "Memory debugging support: no\r\n              dl support: yes\r\n"]
[2.137646, "o", "   Heterogeneous support: no\r\n       MPI_WTIME support: native\r\n     Symbol vis. support: yes\r\n   Host topology support: yes\r\n            IPv6 support: no\r\n          MPI extensions: affinity, cuda, ftmpi, rocm, shortfloat\r\n Fault Tolerance support: yes\r\n          FT MPI support: yes\r\n  MPI_MAX_PROCESSOR_NAME: 256\r\n    MPI_MAX_ERROR_STRING: 256"]
[2.138008, "o", "\r\n     MPI_MAX_OBJECT_NAME: 64\r\n        MPI_MAX_INFO_KEY: 36\r\n        MPI_MAX_INFO_VAL: 256\r\n       MPI_MAX_PORT_NAME: 1024\r\n  MPI_MAX_DATAREP_STRING: 128\r\n         MCA accelerator: null (MCA v2.1.0, API v1.0.0, Component v5.0.7)\r\n           MCA allocator: basic (MCA v2.1.0, API v2.0.0, Component v5.0.7)\r\n           MCA allocator: bucket (MCA v2.1.0, API v2.0.0, Component v5.0.7)\r\n           MCA backtrace: execinfo (MCA v2.1.0, API v2.0.0, Component v5.0.7)\r\n                 MCA btl: self (MCA v2.1.0, API v3.3.0, Component v5.0.7)\r\n                 MCA btl: sm (MCA v2.1.0, API v3.3.0, Component v5.0.7)"]
[2.138784, "o", "\r\n                 MCA btl: tcp (MCA v2.1.0, API v3.3.0, Component v5.0.7)\r\n"]
[2.13908, "o", "                  MCA dl: dlopen (MCA v2.1.0, API v1.0.0, Component v5.0.7)"]
[2.139791, "o", "\r\n                  MCA if: linux_ipv6 (MCA v2.1.0, API v2.0.0, Component\r\n                          v5.0.7)\r\n                  MCA if: posix_ipv4 (MCA v2.1.0, API v2.0.0, Component\r\n                          v5.0.7)\r\n"]
[2.140087, "o", "         MCA installdirs: env (MCA v2.1.0, API v2.0.0, Component v5.0.7)\r\n         MCA installdirs: config (MCA v2.1.0, API v2.0.0, Component v5.0.7)\r\n              MCA memory: patcher (MCA v2.1.0, API v2.0.0, Component v5.0.7)\r\n"]
[2.141959, "o", "               MCA mpool: hugepage (MCA v2.1.0, API v3.1.0, Component v5.0.7)\r\n             MCA patcher: overwrite (MCA v2.1.0, API v1.0.0, Component\r\n                          v5.0.7)\r\n              MCA rcache: grdma (MCA v2.1.0, API v3.3.0, Component v5.0.7)\r\n           MCA reachable: weighted (MCA v2.1.0, API v2.0.0, Component v5.0.7)\r\n               MCA shmem: mmap (MCA v2.1.0, API v2.0.0, Component v5.0.7)\r\n               MCA shmem: posix (MCA v2.1.0, API v2.0.0, Component v5.0.7)\r\n               MCA shmem: sysv (MCA v2.1.0, API v2.0.0, Component v5.0.7)\r\n                MCA smsc: cma (MCA v2.1.0, API v1.0.0, Component v5.0.7)\r\n             MCA threads: pthreads (MCA v2.1.0, API v1.0.0, Component v5.0.7)\r\n               MCA timer: linux (MCA v2.1.0, API v2.0.0, Component v5.0.7)\r\n                 MCA bml: r2 (MCA v2.1.0, API v2.1.0, Component v5.0.7)\r\n"]
[2.142886, "o", "                MCA coll: adapt (MCA v2.1.0, API v2.4.0, Component v5.0.7)\r\n                MCA coll: basic (MCA v2.1.0, API v2.4.0, Component v5.0.7)\r\n                MCA coll: han (MCA v2.1.0, API v2.4.0, Component v5.0.7)\r\n                MCA coll: inter (MCA v2.1.0, API v2.4.0, Component v5.0.7)\r\n                MCA coll: libnbc (MCA v2.1.0, API v2.4.0, Component v5.0.7)\r\n                MCA coll: self (MCA v2.1.0, API v2.4.0, Component v5.0.7)\r\n                MCA coll: sync (MCA v2.1.0, API v2.4.0, Component v5.0.7)\r\n                MCA coll: tuned (MCA v2.1.0, API v2.4.0, Component v5.0.7)\r\n                MCA coll: ftagree (MCA v2.1.0, API v2.4.0, Component v5.0.7)\r\n                MCA coll: monitoring (MCA v2.1.0, API v2.4.0, Component\r\n                          v5.0.7)\r\n                MCA coll: sm (MCA v2.1.0, API v2.4.0, Component v5.0.7)\r\n                MCA fbtl: posix (MCA v2.1.0, API v2.0.0, Component v5.0.7)\r\n               MCA fcoll: dynamic (MCA v2.1.0, API v2.0.0, Component v5.0.7)\r\n               MCA fcoll: dynamic_gen2 (MCA v2.1.0, API v2.0.0, Component\r\n                          v5.0.7)\r\n               MCA fcoll: individual (MCA v2.1.0, API v2.0.0, Component\r\n                          v5.0.7)\r\n               MCA fcoll: vulcan (MCA v2.1.0, API v2.0.0, Component v5.0.7)\r\n                  MCA fs: ufs (MCA v2.1.0, API v2.0.0, Component v5.0.7)\r\n                MCA hook: comm_method (MCA v2.1.0, API v1.0.0, Component\r\n                          v5.0.7)\r\n                  MCA io: ompio (MCA v2.1.0, API v2.0.0, Component v5.0.7)\r\n                  MCA io: romio341 (MCA v2.1.0, API v2.0.0, Component v5.0.7)\r\n                  MCA op: avx (MCA v2.1.0, API v1.0.0, Component v5.0.7)\r\n                 MCA osc: sm (MCA v2.1.0, API v3.0.0, Component v5.0.7)\r\n                 MCA osc: monitoring (MCA v2.1.0, API v3.0.0, Component\r\n                          v5.0.7)\r\n                 MCA osc: rdma (MCA v2.1.0, API v3.0.0, Component v5.0.7)\r\n                MCA part: persist (MCA v2.1.0, API v4.0.0, Component v5.0.7)\r\n                 MCA pml: cm (MCA v2.1.0, API v2.1.0, Component v5.0.7)\r\n                 MCA pml: monitoring (MCA v2.1.0, API v2.1.0, Component\r\n                          v5.0.7)\r\n                 MCA pml: ob1 (MCA v2.1.0, API v2.1.0, Component v5.0.7)\r\n                 MCA pml: v (MCA v2.1.0, API v2.1.0, Component v5.0.7)\r\n            MCA sharedfp: individual (MCA v2.1.0, API v2.0.0, Component\r\n                          v5.0.7)\r\n            MCA sharedfp: lockedfile (MCA v2.1.0, API v2.0.0, Component\r\n                          v5.0.7)\r\n            MCA sharedfp: sm (MCA v2.1.0, API v2.0.0, Component v5.0.7)\r\n"]
[2.143798, "o", "                MCA topo: basic (MCA v2.1.0, API v2.2.0, Component v5.0.7)\r\n                MCA topo: treematch (MCA v2.1.0, API v2.2.0, Component\r\n                          v5.0.7)\r\n           MCA vprotocol: pessimist (MCA v2.1.0, API v2.0.0, Component\r\n                          v5.0.7)\r\n            MCA mca base: ---------------------------------------------------\r\n            MCA mca base: parameter \u001b[34m\"mca_param_files\"\u001b[0m (current value:\r\n                          \u001b[32m\"/root/.openmpi/mca-params.conf,/usr/local/etc/openmpi-mca-params.conf\"\u001b[0m,\r\n                          data source: default, level: 2 user/detail, type:\r\n                          string, deprecated, synonym of:\r\n                          mca_base_param_files)\r\n                          Path for MCA configuration files containing\r\n                          variable values\r\n            MCA mca base: parameter \u001b[34m\"mca_component_path\"\u001b[0m (current value:\r\n                          \u001b[32m\"/usr/local/lib/openmpi:/root/.openmpi/components\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type:\r\n                          string, deprecated, synonym of:\r\n                          mca_base_component_path)\r\n                          Path where to look for additional components\r\n            MCA mca base: parameter \u001b[34m\"mca_component_show_load_errors\"\u001b[0m (current\r\n                          value: \u001b[32m\"all\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: string, deprecated, synonym of:\r\n                          mca_base_component_show_load_errors)\r\n                          Whether to show warnings for components that fail\r\n                          to load or not.  Valid values are \"all\" (meaning:\r\n                          all load failures are reported), \"none\" (no load\r\n                          failures are reported), or a comma-delimited list\r\n                          of items, each of which can be a\r\n                          framework/component pair or a framework name (only\r\n                          load failures from the specifically-listed items\r\n                          are reported).  If the comma-delimited list is\r\n                          prefixed with \"^\", then orientation of the list is\r\n                          negated: warn about all load failures *except* for\r\n                          the listed items.\r\n            MCA mca base: parameter \u001b[34m\"mca_component_disable_dlopen\"\u001b[0m (current\r\n                          value: \u001b[32m\"false\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: bool, deprecated, synonym of:\r\n                          mca_base_component_disable_dlopen)\r\n                          Whether to attempt to disable opening dynamic\r\n                          components or not\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mca base: parameter \u001b[34m\"mca_verbose\"\u001b[0m (current value: \u001b[32m\"stderr\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type:\r\n                          string, deprecated, synonym of: mca_base_verbose)\r\n                          Specifies where the default error output stream\r\n"]
[2.144843, "o", "                          goes (this is separate from distinct help\r\n                          messages).  Accepts a comma-delimited list of:\r\n                          stderr, stdout, syslog,\r\n                          syslogpri:<notice|info|debug>, syslogid:<str>\r\n                          (where str is the prefix string for all syslog\r\n                          notices), file[:filename] (if filename is not\r\n                          specified, a default filename is used), fileappend\r\n                          (if not specified, the file is opened for\r\n                          truncation), level[:N] (if specified, integer\r\n                          verbose level; otherwise, 0 is implied)\r\n            MCA mca base: ---------------------------------------------------\r\n            MCA mca base: parameter \u001b[34m\"mca_base_param_files\"\u001b[0m (current value:\r\n                          \u001b[32m\"/root/.openmpi/mca-params.conf,/usr/local/etc/openmpi-mca-params.conf\"\u001b[0m,\r\n                          data source: default, level: 2 user/detail, type:\r\n                          string, synonyms: mca_param_files)\r\n                          Path for MCA configuration files containing\r\n                          variable values\r\n            MCA mca base: informational \u001b[34m\"mca_base_override_param_file\"\u001b[0m\r\n                          (current value:\r\n                          \u001b[32m\"/usr/local/etc/openmpi-mca-params-override.conf\"\u001b[0m,\r\n                          data source: default, level: 2 user/detail, type:\r\n                          string)\r\n                          Variables set in this file will override any value\r\n                          set inthe environment or another configuration file\r\n            MCA mca base: parameter \u001b[34m\"mca_base_suppress_override_warning\"\u001b[0m\r\n                          (current value: \u001b[32m\"false\"\u001b[0m, data source: default,\r\n                          level: 2 user/detail, type: bool)\r\n                          Suppress warnings when attempting to set an\r\n                          overridden value (default: false)\r\n"]
[2.146705, "o", "                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mca base: parameter \u001b[34m\"mca_base_param_file_prefix\"\u001b[0m (current\r\n                          value: \u001b[32m\"\"\u001b[0m, data source: default, level: 3 user/all,\r\n                          type: string)\r\n                          Aggregate MCA parameter file sets\r\n            MCA mca base: parameter \u001b[34m\"mca_base_envar_file_prefix\"\u001b[0m (current\r\n                          value: \u001b[32m\"\"\u001b[0m, data source: default, level: 3 user/all,\r\n                          type: string)\r\n                          Aggregate MCA parameter file set for env variables\r\n            MCA mca base: parameter \u001b[34m\"mca_base_param_file_path\"\u001b[0m (current\r\n                          value:\r\n                          \u001b[32m\"/usr/local/share/openmpi/amca-param-sets:/root/openmpi-5.0.7\"\u001b[0m,\r\n                          data source: default, level: 3 user/all, type:\r\n                          string)\r\n                          Aggregate MCA parameter Search path\r\n            MCA mca base: parameter \u001b[34m\"mca_base_param_file_path_force\"\u001b[0m (current\r\n                          value: \u001b[32m\"\"\u001b[0m, data source: default, level: 3 user/all,\r\n                          type: string)\r\n                          Forced Aggregate MCA parameter Search path\r\n            MCA mca base: parameter \u001b[34m\"mca_base_env_list\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m,\r\n                          data source: default, level: 3 user/all, type:\r\n                          string)\r\n                          Set SHELL env variables\r\n            MCA mca base: parameter \u001b[34m\"mca_base_env_list_delimiter\"\u001b[0m (current\r\n                          value: \u001b[32m\";\"\u001b[0m, data source: default, level: 3\r\n                          user/all, type: string)\r\n                          Set SHELL env variables delimiter. Default:\r\n                          semicolon ';'\r\n            MCA mca base: parameter \u001b[34m\"mca_base_component_path\"\u001b[0m (current value:\r\n                          \u001b[32m\"/usr/local/lib/openmpi:/root/.openmpi/components\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type:\r\n                          string, synonyms: mca_component_path)\r\n                          Path where to look for additional components\r\n            MCA mca base: parameter \u001b[34m\"mca_base_component_show_load_errors\"\u001b[0m\r\n                          (current value: \u001b[32m\"all\"\u001b[0m, data source: default, level:\r\n                          9 dev/all, type: string, synonyms:\r\n                          mca_component_show_load_errors)\r\n                          Whether to show warnings for components that fail\r\n                          to load or not.  Valid values are \"all\" (meaning:\r\n                          all load failures are reported), \"none\" (no load\r\n                          failures are reported), or a comma-delimited list\r\n                          of items, each of which can be a\r\n                          framework/component pair or a framework name (only\r\n                          load failures from the specifically-listed items\r\n                          are reported).  If the comma-delimited list is\r\n                          prefixed with \"^\", then orientation of the list is\r\n                          negated: warn about all load failures *except* for\r\n                          the listed items.\r\n            MCA mca base: parameter \u001b[34m\"mca_base_component_track_load_errors\"\u001b[0m\r\n                          (current value: \u001b[32m\"false\"\u001b[0m, data source: default,\r\n                          level: 9 dev/all, type: bool)\r\n                          Whether to track errors for components that failed\r\n                          to load or not\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n     "]
[2.147067, "o", "       MCA mca base: parameter \u001b[34m\"mca_base_component_disable_dlopen\"\u001b[0m\r\n                          (current value: \u001b[32m\"false\"\u001b[0m, data source: default,\r\n                          level: 9 dev/all, type: bool, synonyms:\r\n                          mca_component_disable_dlopen)\r\n                          Whether to attempt to disable opening dynamic\r\n                          components or not\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mca base: parameter \u001b[34m\"mca_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"stderr\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: string, synonyms: mca_verbose)\r\n                          Specifies where the default error output stream\r\n                          goes (this is separate from distinct help\r\n                          messages).  Accepts a comma-delimited list of:\r\n                          stderr, stdout, syslog,\r\n                          syslogpri:<notice|info|debug>, syslogid:<str>\r\n                          (where str is the prefix string for all syslog\r\n                          notices), file[:filename] (if filename is not\r\n                          specified, a default filename is used), fileappend\r\n                          (if not specified, the file is opened for\r\n                          truncation), level[:N] (if specified, integer\r\n                          verbose level; otherwise, 0 is implied)\r\n           MCA opal base: ---------------------------------------------------\r\n           MCA opal base: parameter \u001b[34m\"opal_signal\"\u001b[0m (current value: \u001b[32m\"6,7,8,11\"\u001b[0m,\r\n                          data source: default, level: 3 user/all, type:\r\n                          string)\r\n                          Comma-delimited list of integer signal numbers to\r\n                          Open MPI to attempt to intercept.  Upon receipt of\r\n                          the intercepted signal, Open MPI will display a\r\n                          stack trace and abort.  Open MPI will *not* replace\r\n                          signals if handlers are already installed by the\r\n                          time MPI_INIT is invoked.  Optionally append\r\n                          \":complain\" to any signal number in the\r\n                          comma-delimited list to make Open MPI complain if\r\n                          it detects another signal handler (and therefore\r\n                          does not insert its own).\r\n           MCA opal base: parameter \u001b[34m\"opal_stacktrace_output\"\u001b[0m (current value:\r\n                          \u001b[32m\"stderr\"\u001b[0m, data source: default, level: 3 user/all,\r\n                          type: string)\r\n                          Specifies where the stack trace output stream goes.\r\n                           Accepts one of the following: none (disabled),\r\n                          stderr (default), stdout, file[:filename].   If\r\n                          'filename' is not specified, a default filename of\r\n                          'stacktrace' is used.  The 'filename' is appended\r\n                          with either '.PID' or '.RANK.PID', if RANK is\r\n                          available.  The 'filename' can be an absolute path\r\n                          or a relative path to the current working\r\n                          directory.\r\n           MCA opal base: parameter \u001b[34m\"opal_set_max_sys_limits\"\u001b[0m (current value:\r\n                          \u001b[32m\"\"\u001b[0m, data source: default, level: 3 user/all, type:\r\n                          string)\r\n                          Set the specified system-imposed limits to the\r\n                          specified value, including \"unlimited\".Supported\r\n                          params: core, filesize, maxmem, openfiles,\r\n                          stacksize, maxchildren\r\n           MCA opal base: parameter \u001b[34m\"opal_var_dump_color\"\u001b[0m (current value:\r\n                          "]
[2.148304, "o", "\u001b[32m\"name=34,value=32,valid_values=36\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          The colors to use when dumping MCA vars with color\r\n                          (e.g. ompi_info). The format is a comma-delimited\r\n                          key=value list, where the key is the attribute\r\n                          whose color to adjust, and the value is the ANSI\r\n                          color code (see the ANSI X3.64 CSI SGR sequence).\r\n                          Available keys: name,value,valid_values.\r\n           MCA opal base: informational \u001b[34m\"opal_built_with_cuda_support\"\u001b[0m\r\n                          (current value: \u001b[32m\"false\"\u001b[0m, data source: default,\r\n                          level: 4 tuner/basic, type: bool, synonyms:\r\n                          mpi_built_with_cuda_support)\r\n                          Whether CUDA GPU buffer support is built into\r\n                          library or not\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n           MCA opal base: parameter \u001b[34m\"opal_cuda_support\"\u001b[0m (current value:\r\n                          \u001b[32m\"false\"\u001b[0m, data source: default, level: 3 user/all,\r\n                          type: bool, synonyms: mpi_cuda_support)\r\n                          Whether CUDA GPU buffer support is enabled or not\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n           MCA opal base: parameter \u001b[34m\"opal_warn_on_missing_libcuda\"\u001b[0m (current\r\n                          value: \u001b[32m\"true\"\u001b[0m, data source: default, level: 3\r\n                          user/all, type: bool)\r\n                          Whether to print a message when CUDA support is\r\n                          enabled but libcuda is not found\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n           MCA opal base: parameter \u001b[34m\"opal_leave_pinned\"\u001b[0m (current value:\r\n                          \u001b[32m\"auto\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int, deprecated, synonym of:\r\n                          mpi_leave_pinned)\r\n                          Whether to use the \"leave pinned\" protocol or not. \r\n                          Enabling this setting can help bandwidth\r\n                          performance when repeatedly sending and receiving\r\n                          large messages with the same buffers over\r\n                          RDMA-based networks (false = do not use \"leave\r\n                          pinned\" protocol, true = use \"leave pinned\"\r\n                          protocol, auto = allow network to choose at\r\n                          runtime).\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mauto\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n           MCA opal base: parameter \u001b[34m\"opal_leave_pinned_pipeline\"\u001b[0m (current\r\n                          value: \u001b[32m\"false\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: bool, deprecated, synonym of:\r\n                          mpi_leave_pinned_pipeline)\r\n                          Whether to use the \"leave pinned pipeline\" protocol\r\n                          or not.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n           MCA opal base: parameter \u001b[34m\"opal_abort_delay\"\u001b[0m (curren"]
[2.149189, "o", "t value: \u001b[32m\"0\"\u001b[0m,\r\n                          data source: default, level: 5 tuner/detail, type:\r\n                          int, synonyms: mpi_abort_delay)\r\n                          If nonzero, print out an identifying message when\r\n                          abort operation is invoked (hostname, PID of the\r\n                          process that called abort) and delay for that many\r\n                          seconds before exiting (a negative delay value\r\n                          means to never abort).  This allows attaching of a\r\n                          debugger before quitting the job.\r\n           MCA opal base: parameter \u001b[34m\"opal_abort_print_stack\"\u001b[0m (current value:\r\n                          \u001b[32m\"false\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: bool, synonyms:\r\n                          mpi_abort_print_stack)\r\n                          If nonzero, print out a stack trace when abort is\r\n                          invoked\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n           MCA opal base: parameter \u001b[34m\"opal_max_thread_in_progress\"\u001b[0m (current\r\n                          value: \u001b[32m\"1\"\u001b[0m, data source: default, level: 8\r\n                          dev/detail, type: int)\r\n                          Number of thread allowed in opal_progress. Default:\r\n                          1\r\n            MCA opal net: ---------------------------------------------------\r\n            MCA opal net: parameter \u001b[34m\"opal_net_private_ipv4\"\u001b[0m (current value:\r\n                          \u001b[32m\"10.0.0.0/8;172.16.0.0/12;192.168.0.0/16;169.254.0.0/16\"\u001b[0m,\r\n                          data source: default, level: 3 user/all, type:\r\n                          string)\r\n                          Semicolon-delimited list of CIDR notation entries\r\n                          specifying what networks are considered \"private\"\r\n                          (default value based on RFC1918 and RFC3330)\r\n    MCA accelerator base: ---------------------------------------------------\r\n    MCA accelerator base: parameter \u001b[34m\"accelerator\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data\r\n                          source: default, level: 2 user/detail, type:\r\n                          string)\r\n                          Default selection set of components for the\r\n                          accelerator framework (<none> means use all\r\n                          components that can be found)\r\n    MCA accelerator base: ---------------------------------------------------\r\n    MCA accelerator base: parameter \u001b[34m\"accelerator_base_verbose\"\u001b[0m (current\r\n                          value: \u001b[32m\"error\"\u001b[0m, data source: default, level: 8\r\n                          dev/detail, type: int)\r\n                          Verbosity level for the accelerator framework\r\n                          (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n      MCA allocator base: ---------------------------------------------------\r\n      MCA allocator base: parameter \u001b[34m\"allocator\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data\r\n                          source: default, level: 2 user/detail, type:\r\n                          string)\r\n                          Default selection set of components for the\r\n                          allocator framework (<none> means use all\r\n                          components that can be found)\r\n      MCA allocator base: ---------------------------------------------------\r\n      MCA allocator base: parameter \u001b[34m\"allocator_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the allocator framework\r\n                          (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n    MCA allocator bucket: ---------------------------------------------------\r\n    MCA allocator bucket: parameter \u001b[34m\"allocator_bucket_num_buckets\"\u001b[0m (current\r\n                          value: \u001b[32m\"30\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n      MCA backtrace base: ---------------------------------------------------\r\n      MCA backtrace base: parameter \u001b[34m\"backtrace\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data\r\n                          source: default, level: 2 user/detail, type:\r\n                          string)\r\n                          Default selection set of components for the\r\n                          backtrace framework (<none> means use all\r\n                          components that can be found)\r\n      MCA backtrace base: ---------------------------------------------------\r\n      MCA backtrace base: parameter \u001b[34m\"backtrace_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the backtrace framework\r\n                          (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n            MCA btl base: ---------------------------------------------------\r\n            MCA btl base: parameter \u001b[34m\"btl\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the btl\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n            MCA btl base: ---------------------------------------------------\r\n            MCA btl base: parameter \u001b[34m\"btl_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the btl framework (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n            MCA btl base: parameter \u001b[34m\"btl_base_include\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type:\r\n                          string)\r\n            MCA btl base: parameter \u001b[34m\"btl_base_exclude\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type:\r\n                          string)\r\n            MCA btl base: parameter \u001b[34m\"btl_base_warn_peer_error\"\u001b[0m (current\r\n                          value: \u001b[32m\"true\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: bool)\r\n                          This parameter is used to turn on warning messages\r\n                          when peers disconnect unexpectedly\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA btl base: parameter \u001b[34m\"btl_base_warn_component_unused\"\u001b[0m (current\r\n                          value: \u001b[32m\"1\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          This parameter is used to turn on warning messages\r\n                          when certain NICs are not used\r\n            MCA btl self: ---------------------------------------------------\r\n            MCA btl self: parameter \u001b[34m\"btl_self_free_list_num\"\u001b[0m (current value:\r\n                          \u001b[32m\"0\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Number of fragments by default\r\n            MCA btl self: parameter \u001b[34m\"btl_self_free_list_max\"\u001b[0m (current value:\r\n                          \u001b[32m\"64\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Maximum number of fragments\r\n            MCA btl self: parameter \u001b[34m\"btl_self_free_list_inc\"\u001b[0m (current value:\r\n                          \u001b[32m\"8\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Increment by this number of fragments\r\n            MCA btl self: parameter \u001b[34m\"btl_self_exclusivity\"\u001b[0m (current value:\r\n                          \u001b[32m\"65536\"\u001b[0m, data source: default, level: 7 dev/basic,\r\n                          type: unsigned_int)\r\n                          BTL exclusivity (must be >= 0)\r\n            MCA btl self: informational \u001b[34m\"btl_self_atomic_flags\"\u001b[0m (current\r\n                          value: \u001b[32m\"\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: unsigned_int)\r\n                          BTL atomic support flags\r\n                          Valid values: Comma-delimited list of:  \u001b[36m0x1\u001b[0m|\u001b[36madd\u001b[0m,\r\n                          \u001b[36m0x200\u001b[0m|\u001b[36mand\u001b[0m, \u001b[36m0x400\u001b[0m|\u001b[36mor\u001b[0m, \u001b[36m0x800\u001b[0m|\u001b[36mxor\u001b[0m, \u001b[36m0x1000\u001b[0m|\u001b[36mland\u001b[0m,\r\n                          \u001b[36m0x2000\u001b[0m|\u001b[36mlor\u001b[0m, \u001b[36m0x4000\u001b[0m|\u001b[36mlxor\u001b[0m, \u001b[36m0x10000\u001b[0m|\u001b[36mswap\u001b[0m,\r\n                          \u001b[36m0x100000\u001b[0m|\u001b[36mmin\u001b[0m, \u001b[36m0x200000\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0x10000000\u001b[0m|\u001b[36mcompare-and-swap\u001b[0m, \u001b[36m0x20000000\u001b[0m|\u001b[36mglobal\u001b[0m\r\n            MCA btl self: parameter \u001b[34m\"btl_self_rndv_eager_limit\"\u001b[0m (current\r\n                          value: \u001b[32m\"131072\"\u001b[0m, data source: default, level: 4\r\n                          tuner/basic, type: size_t)\r\n                          Size (in bytes, including header) of \"phase 1\"\r\n                          fragment sent for all large messages (must be >= 0\r\n                          and <= eager_limit)\r\n            MCA btl self: parameter \u001b[34m\"btl_self_eager_limit\"\u001b[0m (current value:\r\n                          \u001b[32m\"1024\"\u001b[0m, data source: default, level: 4 tuner/basic,\r\n                          type: size_t)\r\n                          Maximum size (in bytes, including header) of\r\n                          \"short\" messages (must be >= 1).\r\n            MCA btl self: parameter \u001b[34m\"btl_self_get_limit\"\u001b[0m (current value:\r\n                          \u001b[32m\"18446744073709551615\"\u001b[0m, data source: default,\r\n                          level: 4 tuner/basic, type: size_t)\r\n                          Maximum size (in bytes) for btl get\r\n            MCA btl self: parameter \u001b[34m\"btl_self_get_alignment\"\u001b[0m (current value:\r\n                          \u001b[32m\"0\"\u001b[0m, data source: default, level: 6 tuner/all,\r\n                          type: size_t)\r\n                          Alignment required for btl get\r\n            MCA btl self: parameter \u001b[34m\"btl_self_put_limit\"\u001b[0m (current value:\r\n                          \u001b[32m\"18446744073709551615\"\u001b[0m, data source: default,\r\n                          level: 4 tuner/basic, type: size_t)\r\n                          Maximum size (in bytes) for btl put\r\n            MCA btl self: parameter \u001b[34m\"btl_self_put_alignment\"\u001b[0m (current value:\r\n     "]
[2.149929, "o", "                     \u001b[32m\"0\"\u001b[0m, data source: default, level: 6 tuner/all,\r\n                          type: size_t)\r\n                          Alignment required for btl put\r\n            MCA btl self: parameter \u001b[34m\"btl_self_accelerator_max_send_size\"\u001b[0m\r\n                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 4\r\n                          tuner/basic, type: size_t)\r\n                          Maximum size (in bytes) of a single GPU \"phase 2\"\r\n                          fragment of a long message when using the pipeline\r\n                          protocol (must be >= 1) (only valid on smcuda btl)\r\n            MCA btl self: parameter \u001b[34m\"btl_self_max_send_size\"\u001b[0m (current value:\r\n                          \u001b[32m\"16384\"\u001b[0m, data source: default, level: 4\r\n                          tuner/basic, type: size_t)\r\n                          Maximum size (in bytes) of a single \"phase 2\"\r\n                          fragment of a long message when using the pipeline\r\n                          protocol (must be >= 1)\r\n            MCA btl self: parameter \u001b[34m\"btl_self_rdma_pipeline_send_length\"\u001b[0m\r\n                          (current value: \u001b[32m\"2147483647\"\u001b[0m, data source: default,\r\n                          level: 4 tuner/basic, type: size_t)\r\n                          Length of the \"phase 2\" portion of a large message\r\n                          (in bytes) when using the pipeline protocol.  This\r\n                          part of the message will be split into fragments of\r\n                          size max_send_size and sent using send/receive\r\n                          semantics (must be >= 0; only relevant when the PUT\r\n                          flag is set)\r\n            MCA btl self: parameter \u001b[34m\"btl_self_rdma_pipeline_frag_size\"\u001b[0m\r\n                          (current value: \u001b[32m\"2147483647\"\u001b[0m, data source: default,\r\n                          level: 4 tuner/basic, type: size_t)\r\n                          Maximum size (in bytes) of a single \"phase 3\"\r\n                          fragment from a long message when using the\r\n                          pipeline protocol.  These fragments will be sent\r\n                          using RDMA semantics (must be >= 1; only relevant\r\n                          when the PUT flag is set)\r\n            MCA btl self: parameter \u001b[34m\"btl_self_min_rdma_pipeline_size\"\u001b[0m\r\n                          (current value: \u001b[32m\"2147484671\"\u001b[0m, data source: default,\r\n                          level: 4 tuner/basic, type: size_t)\r\n                          Messages smaller than this size (in bytes) will not\r\n                          use the RDMA pipeline protocol.  Instead, they will\r\n                          be split into fragments of max_send_size and sent\r\n                          using send/receive semantics (must be >=0, and is\r\n                          automatically adjusted up to at least\r\n                          (eager_limit+btl_rdma_pipeline_send_length); only\r\n                          relevant when the PUT flag is set)\r\n            MCA btl self: parameter \u001b[34m\"btl_self_latency\"\u001b[0m (current value: \u001b[32m\"0\"\u001b[0m,\r\n                          data source: default, level: 5 tuner/detail, type:\r\n                          unsigned_int)\r\n                          Approximate latency of interconnect (0 =\r\n                          auto-detect value at run-time [not supported in all\r\n                          BTL modules], >= 1 = latency in microseconds)\r\n            MCA btl self: parameter \u001b[34m\"btl_self_bandwidth\"\u001b[0m (current value:\r\n                          \u001b[32m\"100\"\u001b[0m, data source: default, level: 5 tuner/detail,\r\n                          type: unsigned_int)\r\n                          Approximate maximum bandwidth of interconnect (0 =\r\n                          auto-detect value at run-time [not supported in all\r\n                          BTL modules], >= 1 = bandwidth in Mbps)\r\n              MCA btl sm: ---------------------------------------------------\r\n              MCA btl sm: parameter \u001b[34m\"btl_sm_free_list_num\"\u001b[0m (current value:\r\n          "]
[2.150786, "o", "                \u001b[32m\"8\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int, synonyms: btl_vader_free_list_num)\r\n                          Initial number of fragments to allocate for shared\r\n                          memory communication.\r\n              MCA btl sm: parameter \u001b[34m\"btl_sm_free_list_max\"\u001b[0m (current value:\r\n                          \u001b[32m\"512\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int, synonyms: btl_vader_free_list_max)\r\n                          Maximum number of fragments to allocate for shared\r\n                          memory communication.\r\n              MCA btl sm: parameter \u001b[34m\"btl_sm_free_list_inc\"\u001b[0m (current value:\r\n                          \u001b[32m\"64\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int, synonyms: btl_vader_free_list_inc)\r\n                          Number of fragments to create on each allocation.\r\n              MCA btl sm: parameter \u001b[34m\"btl_sm_memcpy_limit\"\u001b[0m (current value:\r\n                          \u001b[32m\"524288\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int, synonyms:\r\n                          btl_vader_memcpy_limit)\r\n                          Message size to switch from using memmove to\r\n                          memcpy. The relative speed of these two routines\r\n                          can vary by size.\r\n              MCA btl sm: parameter \u001b[34m\"btl_sm_segment_size\"\u001b[0m (current value:\r\n                          \u001b[32m\"16777216\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int, synonyms:\r\n                          btl_vader_segment_size)\r\n                          Maximum size of all shared memory buffers (default:\r\n                          16M)\r\n              MCA btl sm: parameter \u001b[34m\"btl_sm_max_inline_send\"\u001b[0m (current value:\r\n                          \u001b[32m\"256\"\u001b[0m, data source: default, level: 5 tuner/detail,\r\n                          type: unsigned_int, synonyms:\r\n                          btl_vader_max_inline_send)\r\n                          Maximum size to transfer using copy-in copy-out\r\n                          semantics\r\n              MCA btl sm: parameter \u001b[34m\"btl_sm_fbox_threshold\"\u001b[0m (current value:\r\n                          \u001b[32m\"16\"\u001b[0m, data source: default, level: 5 tuner/detail,\r\n                          type: unsigned_int, synonyms:\r\n                          btl_vader_fbox_threshold)\r\n                          Number of sends required before an eager send\r\n                          buffer is setup for a peer (default: 16)\r\n              MCA btl sm: parameter \u001b[34m\"btl_sm_fbox_max\"\u001b[0m (current value: \u001b[32m\"32\"\u001b[0m,\r\n                          data source: default, level: 5 tuner/detail, type:\r\n                          unsigned_int, synonyms: btl_vader_fbox_max)\r\n                          Maximum number of eager send buffers to allocate\r\n                          (default: 32)\r\n              MCA btl sm: parameter \u001b[34m\"btl_sm_fbox_size\"\u001b[0m (current value:\r\n                          \u001b[32m\"4096\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: unsigned_int, synonyms:\r\n                          btl_vader_fbox_size)\r\n                          Size of per-peer fast transfer buffers (default:\r\n                          4k)\r\n              MCA btl sm: parameter \u001b[34m\"btl_sm_backing_directory\"\u001b[0m (current\r\n                          value: \u001b[32m\"/dev/shm\"\u001b[0m, data source: default, level: 3\r\n                          user/all, type: string, synonyms:\r\n                          btl_vader_backing_directory)\r\n                          Directory to place backing files for shared memory\r\n                          communication. This directory should be on a local\r\n                          filesystem such as /tmp or /dev/shm (default:\r\n                          (linux) /dev/shm, (others) session directory)\r\n              MCA btl sm: parameter \u001b[34m\"btl_sm_exclusivity\"\u001b[0m (current value:\r\n                          \u001b[32m\"65536\"\u001b[0m, data s"]
[2.151397, "o", "ource: default, level: 7 dev/basic,\r\n                          type: unsigned_int, synonyms:\r\n                          btl_vader_exclusivity)\r\n                          BTL exclusivity (must be >= 0)\r\n              MCA btl sm: parameter \u001b[34m\"btl_sm_flags\"\u001b[0m (current value:\r\n                          \u001b[32m\"send,inplace\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: unsigned_int, synonyms:\r\n                          btl_vader_flags)\r\n                          BTL bit flags (general flags: send, put, get,\r\n                          in-place, hetero-rdma, atomics, fetching-atomics)\r\n                          Valid values: Comma-delimited list of:  \u001b[36m0x1\u001b[0m|\u001b[36msend\u001b[0m,\r\n                          \u001b[36m0x2\u001b[0m|\u001b[36mput\u001b[0m, \u001b[36m0x4\u001b[0m|\u001b[36mget\u001b[0m, \u001b[36m0x8\u001b[0m|\u001b[36minplace\u001b[0m, \u001b[36m0x4000\u001b[0m|\u001b[36msignaled\u001b[0m,\r\n                          \u001b[36m0x8000\u001b[0m|\u001b[36matomics\u001b[0m, \u001b[36m0x10000\u001b[0m|\u001b[36mfetching-atomics\u001b[0m,\r\n                          \u001b[36m0x20000\u001b[0m|\u001b[36mstatic\u001b[0m, \u001b[36m0x400\u001b[0m|\u001b[36maccelerator-put\u001b[0m,\r\n                          \u001b[36m0x800\u001b[0m|\u001b[36maccelerator-get\u001b[0m,\r\n                          \u001b[36m0x1000\u001b[0m|\u001b[36maccelerator-async-send\u001b[0m,\r\n                          \u001b[36m0x2000\u001b[0m|\u001b[36maccelerator-async-recv\u001b[0m, \u001b[36m0x200\u001b[0m|\u001b[36mfailover\u001b[0m,\r\n                          \u001b[36m0x10\u001b[0m|\u001b[36mneed-ack\u001b[0m, \u001b[36m0x20\u001b[0m|\u001b[36mneed-csum\u001b[0m, \u001b[36m0x100\u001b[0m|\u001b[36mhetero-rdma\u001b[0m,\r\n                          \u001b[36m0x80000\u001b[0m|\u001b[36mrdma-flush\u001b[0m, \u001b[36m0x100000\u001b[0m|\u001b[36mput-am\u001b[0m,\r\n                          \u001b[36m0x200000\u001b[0m|\u001b[36mget_am\u001b[0m, \u001b[36m0x400000\u001b[0m|\u001b[36matomic-am\u001b[0m\r\n              MCA btl sm: informational \u001b[34m\"btl_sm_atomic_flags\"\u001b[0m (current value:\r\n                          \u001b[32m\"\"\u001b[0m, data source: default, level: 5 tuner/detail,\r\n                          type: unsigned_int, synonyms:\r\n                          btl_vader_atomic_flags)\r\n                          BTL atomic support flags\r\n                          Valid values: Comma-delimited list of:  \u001b[36m0x1\u001b[0m|\u001b[36madd\u001b[0m,\r\n                          \u001b[36m0x200\u001b[0m|\u001b[36mand\u001b[0m, \u001b[36m0x400\u001b[0m|\u001b[36mor\u001b[0m, \u001b[36m0x800\u001b[0m|\u001b[36mxor\u001b[0m, \u001b[36m0x1000\u001b[0m|\u001b[36mland\u001b[0m,\r\n                          \u001b[36m0x2000\u001b[0m|\u001b[36mlor\u001b[0m, \u001b[36m0x4000\u001b[0m|\u001b[36mlxor\u001b[0m, \u001b[36m0x10000\u001b[0m|\u001b[36mswap\u001b[0m,\r\n                          \u001b[36m0x100000\u001b[0m|\u001b[36mmin\u001b[0m, \u001b[36m0x200000\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0x10000000\u001b[0m|\u001b[36mcompare-and-swap\u001b[0m, \u001b[36m0x20000000\u001b[0m|\u001b[36mglobal\u001b[0m\r\n              MCA btl sm: parameter \u001b[34m\"btl_sm_rndv_eager_limit\"\u001b[0m (current value:\r\n                          \u001b[32m\"32768\"\u001b[0m, data source: default, level: 4\r\n                          tuner/basic, type: size_t, synonyms:\r\n                          btl_vader_rndv_eager_limit)\r\n                          Size (in bytes, including header) of \"phase 1\"\r\n                          fragment sent for all large messages (must be >= 0\r\n                          and <= eager_limit)\r\n              MCA btl sm: parameter \u001b[34m\"btl_sm_eager_limit\"\u001b[0m (current value:\r\n                          \u001b[32m\"4096\"\u001b[0m, data source: default, level: 4 tuner/basic,\r\n                          type: size_t, synonyms: btl_vader_eager_limit)\r\n                          Maximum size (in bytes, including header) of\r\n                          \"short\" messages (must be >= 1).\r\n              MCA btl sm: parameter \u001b[34m\"btl_sm_accelerator_max_send_size\"\u001b[0m\r\n                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 4\r\n                          tuner/basic, type: size_t, synonyms:\r\n                          btl_vader_accelerator_max_send_size)\r\n                          Maximum size (in bytes) of a single GPU \"phase 2\"\r\n                          fragment of a long message when using the pipeline\r\n                          protocol (must be >= 1) (only valid on smcuda btl)\r\n              MCA btl sm: parameter \u001b[34m\"btl_sm_max_send_size\"\u001b[0m (current value:\r\n                          \u001b[32m\"32768\"\u001b[0m, data source: default, lev"]
[2.152095, "o", "el: 4\r\n                          tuner/basic, type: size_t, synonyms:\r\n                          btl_vader_max_send_size)\r\n                          Maximum size (in bytes) of a single \"phase 2\"\r\n                          fragment of a long message when using the pipeline\r\n                          protocol (must be >= 1)\r\n           MCA btl vader: ---------------------------------------------------\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_free_list_num\"\u001b[0m (current value:\r\n                          \u001b[32m\"8\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int, synonym of: btl_sm_free_list_num)\r\n                          Initial number of fragments to allocate for shared\r\n                          memory communication.\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_free_list_max\"\u001b[0m (current value:\r\n                          \u001b[32m\"512\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int, synonym of: btl_sm_free_list_max)\r\n                          Maximum number of fragments to allocate for shared\r\n                          memory communication.\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_free_list_inc\"\u001b[0m (current value:\r\n                          \u001b[32m\"64\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int, synonym of: btl_sm_free_list_inc)\r\n                          Number of fragments to create on each allocation.\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_memcpy_limit\"\u001b[0m (current value:\r\n                          \u001b[32m\"524288\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int, synonym of:\r\n                          btl_sm_memcpy_limit)\r\n                          Message size to switch from using memmove to\r\n                          memcpy. The relative speed of these two routines\r\n                          can vary by size.\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_segment_size\"\u001b[0m (current value:\r\n                          \u001b[32m\"16777216\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int, synonym of:\r\n                          btl_sm_segment_size)\r\n                          Maximum size of all shared memory buffers (default:\r\n                          16M)\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_max_inline_send\"\u001b[0m (current\r\n                          value: \u001b[32m\"256\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: unsigned_int, synonym of:\r\n                          btl_sm_max_inline_send)\r\n                          Maximum size to transfer using copy-in copy-out\r\n                          semantics\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_fbox_threshold\"\u001b[0m (current\r\n                          value: \u001b[32m\"16\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: unsigned_int, synonym of:\r\n                          btl_sm_fbox_threshold)\r\n                          Number of sends required before an eager send\r\n                          buffer is setup for a peer (default: 16)\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_fbox_max\"\u001b[0m (current value:\r\n                          \u001b[32m\"32\"\u001b[0m, data source: default, level: 5 tuner/detail,\r\n                          type: unsigned_int, synonym of: btl_sm_fbox_max)\r\n                          Maximum number of eager send buffers to allocate\r\n                          (default: 32)\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_fbox_size\"\u001b[0m (current value:\r\n                          \u001b[32m\"4096\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: unsigned_int, synonym of:\r\n                          btl_sm_fbox_size)\r\n                          Size of per-peer fast transfer buffers (default:\r\n                          4k)\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_backing_directory\"\u001b[0m (current\r\n                          value: \u001b[32m\"/dev/shm\"\u001b[0m, data source: default, level: 3\r\n                          user/all, type: string, synonym of:\r\n                          btl_sm_backing_directory)\r\n                          Directory to place backing files for shared memory\r\n                          communication. This directory should be on a local\r\n                          filesystem such as /tmp or /dev/shm (default:\r\n                          (linux) /dev/shm, (others) session directory)\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_exclusivity\"\u001b[0m (current value:\r\n                          \u001b[32m\"65536\"\u001b[0m, data source: default, level: 7 dev/basic,\r\n                          type: unsigned_int, synonym of: btl_sm_exclusivity)\r\n                          BTL exclusivity (must be >= 0)\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_flags\"\u001b[0m (current value:\r\n                          \u001b[32m\"send,inplace\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: unsigned_int, synonym of:\r\n                          btl_sm_flags)\r\n                          BTL bit flags (general flags: send, put, get,\r\n                          in-place, hetero-rdma, atomics, fetching-atomics)\r\n                          Valid values: Comma-delimited list of:  \u001b[36m0x1\u001b[0m|\u001b[36msend\u001b[0m,\r\n                          \u001b[36m0x2\u001b[0m|\u001b[36mput\u001b[0m, \u001b[36m0x4\u001b[0m|\u001b[36mget\u001b[0m, \u001b[36m0x8\u001b[0m|\u001b[36minplace\u001b[0m, \u001b[36m0x4000\u001b[0m|\u001b[36msignaled\u001b[0m,"]
[2.152957, "o", "\r\n                          \u001b[36m0x8000\u001b[0m|\u001b[36matomics\u001b[0m, \u001b[36m0x10000\u001b[0m|\u001b[36mfetching-atomics\u001b[0m,\r\n                          \u001b[36m0x20000\u001b[0m|\u001b[36mstatic\u001b[0m, \u001b[36m0x400\u001b[0m|\u001b[36maccelerator-put\u001b[0m,\r\n                          \u001b[36m0x800\u001b[0m|\u001b[36maccelerator-get\u001b[0m,\r\n                          \u001b[36m0x1000\u001b[0m|\u001b[36maccelerator-async-send\u001b[0m,\r\n                          \u001b[36m0x2000\u001b[0m|\u001b[36maccelerator-async-recv\u001b[0m, \u001b[36m0x200\u001b[0m|\u001b[36mfailover\u001b[0m,\r\n                          \u001b[36m0x10\u001b[0m|\u001b[36mneed-ack\u001b[0m, \u001b[36m0x20\u001b[0m|\u001b[36mneed-csum\u001b[0m, \u001b[36m0x100\u001b[0m|\u001b[36mhetero-rdma\u001b[0m,\r\n                          \u001b[36m0x80000\u001b[0m|\u001b[36mrdma-flush\u001b[0m, \u001b[36m0x100000\u001b[0m|\u001b[36mput-am\u001b[0m,\r\n                          \u001b[36m0x200000\u001b[0m|\u001b[36mget_am\u001b[0m, \u001b[36m0x400000\u001b[0m|\u001b[36matomic-am\u001b[0m\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_atomic_flags\"\u001b[0m (current value:\r\n                          \u001b[32m\"\"\u001b[0m, data source: default, level: 5 tuner/detail,\r\n                          type: unsigned_int, synonym of:\r\n                          btl_sm_atomic_flags)\r\n                          BTL atomic support flags\r\n                          Valid values: Comma-delimited list of:  \u001b[36m0x1\u001b[0m|\u001b[36madd\u001b[0m,\r\n                          \u001b[36m0x200\u001b[0m|\u001b[36mand\u001b[0m, \u001b[36m0x400\u001b[0m|\u001b[36mor\u001b[0m, \u001b[36m0x800\u001b[0m|\u001b[36mxor\u001b[0m, \u001b[36m0x1000\u001b[0m|\u001b[36mland\u001b[0m,\r\n                          \u001b[36m0x2000\u001b[0m|\u001b[36mlor\u001b[0m, \u001b[36m0x4000\u001b[0m|\u001b[36mlxor\u001b[0m, \u001b[36m0x10000\u001b[0m|\u001b[36mswap\u001b[0m,\r\n                          \u001b[36m0x100000\u001b[0m|\u001b[36mmin\u001b[0m, \u001b[36m0x200000\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0x10000000\u001b[0m|\u001b[36mcompare-and-swap\u001b[0m, \u001b[36m0x20000000\u001b[0m|\u001b[36mglobal\u001b[0m\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_rndv_eager_limit\"\u001b[0m (current\r\n                          value: \u001b[32m\"32768\"\u001b[0m, data source: default, level: 4\r\n                          tuner/basic, type: size_t, synonym of:\r\n                          btl_sm_rndv_eager_limit)\r\n                          Size (in bytes, including header) of \"phase 1\"\r\n                          fragment sent for all large messages (must be >= 0\r\n                          and <= eager_limit)\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_eager_limit\"\u001b[0m (current value:\r\n                          \u001b[32m\"4096\"\u001b[0m, data source: default, level: 4 tuner/basic,\r\n                          type: size_t, synonym of: btl_sm_eager_limit)\r\n                          Maximum size (in bytes, including header) of\r\n                          \"short\" messages (must be >= 1).\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_accelerator_max_send_size\"\u001b[0m\r\n                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 4\r\n                          tuner/basic, type: size_t, synonym of:\r\n                          btl_sm_accelerator_max_send_size)\r\n                          Maximum size (in bytes) of a single GPU \"phase 2\"\r\n                          fragment of a long message when using the pipeline\r\n                          protocol (must be >= 1) (only valid on smcuda btl)\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_max_send_size\"\u001b[0m (current value:\r\n                          \u001b[32m\"32768\"\u001b[0m, data source: default, level: 4\r\n                          tuner/basic, type: size_t, synonym of:\r\n                          btl_sm_max_send_size)\r\n                          Maximum size (in bytes) of a single \"phase 2\"\r\n                          fragment of a long message when using the pipeline\r\n                          protocol (must be >= 1)\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_major_version\"\u001b[0m (current value:\r\n                          \u001b[32m\"5\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int, synonym of: btl_sm_major_version)\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_minor_version\"\u001b[0m (current value:\r\n                          \u001b[32m\"0\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int, synonym of: btl_sm_minor_version)\r\n           MCA btl vader: parameter \u001b[34m\"btl_vader_release_version\"\u001b[0m (current\r\n                          value: \u001b[32m\"7\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int, synonym of: btl_sm_release_version)\r\n             MCA btl tcp: ---------------------------------------------------\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_links\"\u001b[0m (current value: \u001b[32m\"1\"\u001b[0m, data\r\n                          source: default, level: 4 tuner/basic, type:\r\n                          unsigned_int)\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_if_include\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m,\r\n                          data source: default, level: 1 user/basic, type:\r\n                          string)\r\n                          Comma-delimited list of devices and/or CIDR\r\n                          notation of networks to use for MPI communication\r\n                          (e.g., \"eth0,192.168.0.0/16\").  Mutually exclusive\r\n                          with btl_tcp_if_exclude.\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_if_exclude\"\u001b[0m (current value:\r\n                          \u001b[32m\"127.0.0.1/8,sppp\"\u001b[0m, data source: default, level: 1\r\n                          user/basic, type: string)\r\n                          Comma-delimited list of devices and/or CIDR\r\n                          notation of networks to NOT use for MPI\r\n                          communication -- all devices not matching these\r\n                          specifications will be used (e.g.,\r\n                          \"eth0,192.168.0.0/16\").  If set to a non-default\r\n                          value, it is mutually exclusive with\r\n                          btl_tcp_if_include.\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_free_list_num\"\u001b[0m (current value:\r\n                          \u001b[32m\"8\"\u001b[0m, data source: default, level: 5 tuner/detail,\r\n                          type: int)\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_free_list_max\"\u001b[0m (current value:\r\n                          \u001b[32m\"-1\"\u001b[0m, data source: default, level: 5 tuner/detail,\r\n                          type: int)\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_free_list_inc\"\u001b[0m (current value:\r\n                          \u001b[32m\"32\"\u001b[0m, data source: default, level: 5 tuner/detail,\r\n                          type: int)\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_sndbuf\"\u001b[0m (current value: \u001b[32m\"0\"\u001b[0m,\r\n                          data source: default, level: 4 tuner/basic, type:\r\n                          int)\r\n                          The size of the send buffer socket option for each\r\n                          connection.  Modern TCP stacks generally are\r\n                          smarter than a fixed size and in some situations\r\n"]
[2.15349, "o", "                          setting a buffer size explicitly can actually lower\r\n                          performance.  0 means the tcp btl will not try to\r\n                          set a send buffer size.\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_rcvbuf\"\u001b[0m (current value: \u001b[32m\"0\"\u001b[0m,\r\n                          data source: default, level: 4 tuner/basic, type:\r\n                          int)\r\n                          The size of the receive buffer socket option for\r\n                          each connection.  Modern TCP stacks generally are\r\n                          smarter than a fixed size and in some situations\r\n                          setting a buffer size explicitly can actually lower\r\n                          performance.  0 means the tcp btl will not try to\r\n                          set a receive buffer size.\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_endpoint_cache\"\u001b[0m (current value:\r\n                          \u001b[32m\"30720\"\u001b[0m, data source: default, level: 4\r\n                          tuner/basic, type: int)\r\n                          The size of the internal cache for each TCP\r\n                          connection. This cache is used to reduce the number\r\n                          of syscalls, by replacing them with memcpy. Every\r\n                          read will read the expected data plus the amount of\r\n                          the endpoint_cache\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_use_nagle\"\u001b[0m (current value: \u001b[32m\"0\"\u001b[0m,\r\n                          data source: default, level: 4 tuner/basic, type:\r\n                          int)\r\n                          Whether to use Nagle's algorithm or not (using\r\n                          Nagle's algorithm may increase short message\r\n                          latency)\r\n"]
[2.153985, "o", "             MCA btl tcp: parameter \u001b[34m\"btl_tcp_port_min_v4\"\u001b[0m (current value:\r\n                          \u001b[32m\"1024\"\u001b[0m, data source: default, level: 2 user/detail,\r\n                          type: int)\r\n                          The minimum port where the TCP BTL will try to bind\r\n                          (default 1024)\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_port_range_v4\"\u001b[0m (current value:\r\n                          \u001b[32m\"64511\"\u001b[0m, data source: default, level: 2\r\n                          user/detail, type: int)\r\n                          The number of ports where the TCP BTL will try to\r\n                          bind (default 64511). This parameter together with\r\n                          the port min, define a range of ports where Open\r\n                          MPI will open sockets.\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_progress_thread\"\u001b[0m (current value:\r\n                          \u001b[32m\"0\"\u001b[0m, data source: default, level: 1 user/basic,\r\n                          type: int)\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_warn_all_unfound_interfaces\"\u001b[0m\r\n                          (current value: \u001b[32m\"false\"\u001b[0m, data source: default,\r\n                          level: 2 user/detail, type: bool)\r\n                          Issue a warning for all unfound interfaces included\r\n                          in if_exclude\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_exclusivity\"\u001b[0m (current value:\r\n                          \u001b[32m\"100\"\u001b[0m, data source: default, level: 7 dev/basic,\r\n                          type: unsigned_int)\r\n                          BTL exclusivity (must be >= 0)\r\n"]
[2.154741, "o", "             MCA btl tcp: parameter \u001b[34m\"btl_tcp_flags\"\u001b[0m (current value:\r\n                          \u001b[32m\"send,put,inplace,need-ack,need-csum,hetero-rdma\"\u001b[0m,\r\n                          data source: default, level: 5 tuner/detail, type:\r\n                          unsigned_int)\r\n                          BTL bit flags (general flags: send, put, get,\r\n                          in-place, hetero-rdma, atomics, fetching-atomics)\r\n                          Valid values: Comma-delimited list of:  \u001b[36m0x1\u001b[0m|\u001b[36msend\u001b[0m,\r\n                          \u001b[36m0x2\u001b[0m|\u001b[36mput\u001b[0m, \u001b[36m0x4\u001b[0m|\u001b[36mget\u001b[0m, \u001b[36m0x8\u001b[0m|\u001b[36minplace\u001b[0m, \u001b[36m0x4000\u001b[0m|\u001b[36msignaled\u001b[0m,\r\n                          \u001b[36m0x8000\u001b[0m|\u001b[36matomics\u001b[0m, \u001b[36m0x10000\u001b[0m|\u001b[36mfetching-atomics\u001b[0m,\r\n                          \u001b[36m0x20000\u001b[0m|\u001b[36mstatic\u001b[0m, \u001b[36m0x400\u001b[0m|\u001b[36maccelerator-put\u001b[0m,\r\n                          \u001b[36m0x800\u001b[0m|\u001b[36maccelerator-get\u001b[0m,\r\n                          \u001b[36m0x1000\u001b[0m|\u001b[36maccelerator-async-send\u001b[0m,\r\n                          \u001b[36m0x2000\u001b[0m|\u001b[36maccelerator-async-recv\u001b[0m, \u001b[36m0x200\u001b[0m|\u001b[36mfailover\u001b[0m,\r\n                          \u001b[36m0x10\u001b[0m|\u001b[36mneed-ack\u001b[0m, \u001b[36m0x20\u001b[0m|\u001b[36mneed-csum\u001b[0m, \u001b[36m0x100\u001b[0m|\u001b[36mhetero-rdma\u001b[0m,\r\n                          \u001b[36m0x80000\u001b[0m|\u001b[36mrdma-flush\u001b[0m, \u001b[36m0x100000\u001b[0m|\u001b[36mput-am\u001b[0m,\r\n                          \u001b[36m0x200000\u001b[0m|\u001b[36mget_am\u001b[0m, \u001b[36m0x400000\u001b[0m|\u001b[36matomic-am\u001b[0m\r\n             MCA btl tcp: informational \u001b[34m\"btl_tcp_atomic_flags\"\u001b[0m (current\r\n                          value: \u001b[32m\"\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: unsigned_int)\r\n                          BTL atomic support flags\r\n                          Valid values: Comma-delimited list of:  \u001b[36m0x1\u001b[0m|\u001b[36madd\u001b[0m,\r\n                          \u001b[36m0x200\u001b[0m|\u001b[36mand\u001b[0m, \u001b[36m0x400\u001b[0m|\u001b[36mor\u001b[0m, \u001b[36m0x800\u001b[0m|\u001b[36mxor\u001b[0m, \u001b[36m0x1000\u001b[0m|\u001b[36mland\u001b[0m,\r\n                          \u001b[36m0x2000\u001b[0m|\u001b[36mlor\u001b[0m, \u001b[36m0x4000\u001b[0m|\u001b[36mlxor\u001b[0m, \u001b[36m0x10000\u001b[0m|\u001b[36mswap\u001b[0m,\r\n                          \u001b[36m0x100000\u001b[0m|\u001b[36mmin\u001b[0m, \u001b[36m0x200000\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0x10000000\u001b[0m|\u001b[36mcompare-and-swap\u001b[0m, \u001b[36m0x20000000\u001b[0m|\u001b[36mglobal\u001b[0m\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_rndv_eager_limit\"\u001b[0m (current\r\n                          value: \u001b[32m\"65536\"\u001b[0m, data source: default, level: 4\r\n                          tuner/basic, type: size_t)\r\n                          Size (in bytes, including header) of \"phase 1\"\r\n                          fragment sent for all large messages (must be >= 0\r\n                          and <= eager_limit)\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_eager_limit\"\u001b[0m (current value:\r\n                          \u001b[32m\"65536\"\u001b[0m, data source: default, level: 4\r\n                          tuner/basic, type: size_t)\r\n                          Maximum size (in bytes, including header) of\r\n                          \"short\" messages (must be >= 1).\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_put_limit\"\u001b[0m (current value:\r\n                          \u001b[32m\"18446744073709551615\"\u001b[0m, data source: default,\r\n                          level: 4 tuner/basic, type: size_t)\r\n                          Maximum size (in bytes) for btl put\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_put_alignment\"\u001b[0m (current value:\r\n                          \u001b[32m\"0\"\u001b[0m, data source: default, level: 6 tuner/all,\r\n                          type: size_t)\r\n                          Alignment required for btl put\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_accelerator_max_send_size\"\u001b[0m\r\n"]
[2.155645, "o", "                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 4\r\n                          tuner/basic, type: size_t)\r\n                          Maximum size (in bytes) of a single GPU \"phase 2\"\r\n                          fragment of a long message when using the pipeline\r\n                          protocol (must be >= 1) (only valid on smcuda btl)\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_max_send_size\"\u001b[0m (current value:\r\n                          \u001b[32m\"131072\"\u001b[0m, data source: default, level: 4\r\n                          tuner/basic, type: size_t)\r\n                          Maximum size (in bytes) of a single \"phase 2\"\r\n                          fragment of a long message when using the pipeline\r\n                          protocol (must be >= 1)\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_rdma_pipeline_send_length\"\u001b[0m\r\n                          (current value: \u001b[32m\"131072\"\u001b[0m, data source: default,\r\n                          level: 4 tuner/basic, type: size_t)\r\n                          Length of the \"phase 2\" portion of a large message\r\n                          (in bytes) when using the pipeline protocol.  This\r\n                          part of the message will be split into fragments of\r\n                          size max_send_size and sent using send/receive\r\n                          semantics (must be >= 0; only relevant when the PUT\r\n                          flag is set)\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_rdma_pipeline_frag_size\"\u001b[0m\r\n                          (current value: \u001b[32m\"2147482624\"\u001b[0m, data source: default,\r\n                          level: 4 tuner/basic, type: size_t)\r\n                          Maximum size (in bytes) of a single \"phase 3\"\r\n                          fragment from a long message when using the\r\n                          pipeline protocol.  These fragments will be sent\r\n                          using RDMA semantics (must be >= 1; only relevant\r\n                          when the PUT flag is set)\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_min_rdma_pipeline_size\"\u001b[0m (current\r\n                          value: \u001b[32m\"196608\"\u001b[0m, data source: default, level: 4\r\n                          tuner/basic, type: size_t)\r\n                          Messages smaller than this size (in bytes) will not\r\n                          use the RDMA pipeline protocol.  Instead, they will\r\n                          be split into fragments of max_send_size and sent\r\n                          using send/receive semantics (must be >=0, and is\r\n                          automatically adjusted up to at least\r\n                          (eager_limit+btl_rdma_pipeline_send_length); only\r\n                          relevant when the PUT flag is set)\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_latency\"\u001b[0m (current value: \u001b[32m\"0\"\u001b[0m,\r\n                          data source: default, level: 5 tuner/detail, type:\r\n                          unsigned_int)\r\n                          Approximate latency of interconnect (0 =\r\n                          auto-detect value at run-time [not supported in all\r\n                          BTL modules], >= 1 = latency in microseconds)\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_bandwidth\"\u001b[0m (current value: \u001b[32m\"0\"\u001b[0m,\r\n                          data source: default, level: 5 tuner/detail, type:\r\n                          unsigned_int)\r\n                          Approximate maximum bandwidth of interconnect (0 =\r\n                          auto-detect value at run-time [not supported in all\r\n                          BTL modules], >= 1 = bandwidth in Mbps)\r\n             MCA btl tcp: parameter \u001b[34m\"btl_tcp_disable_family\"\u001b[0m (current value:\r\n                          \u001b[32m\"0\"\u001b[0m, data source: default, level: 2 user/detail,\r\n                          type: int)\r\n             MCA dl base: ---------------------------------------------------\r\n             MCA dl base: parameter \u001b[34m\"dl\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: stri"]
[2.157062, "o", "ng)\r\n                          Default selection set of components for the dl\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n             MCA dl base: ---------------------------------------------------\r\n             MCA dl base: parameter \u001b[34m\"dl_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the dl framework (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n           MCA dl dlopen: ---------------------------------------------------\r\n           MCA dl dlopen: parameter \u001b[34m\"dl_dlopen_filename_suffixes\"\u001b[0m (current\r\n                          value: \u001b[32m\".so,.dylib,.dll,.sl\"\u001b[0m, data source: default,\r\n                          level: 5 tuner/detail, type: string)\r\n                          Comma-delimited list of filename suffixes that the\r\n                          dlopen component will try\r\n          MCA hwloc base: ---------------------------------------------------\r\n          MCA hwloc base: parameter \u001b[34m\"hwloc\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the hwloc\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n          MCA hwloc base: ---------------------------------------------------\r\n          MCA hwloc base: parameter \u001b[34m\"hwloc_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the hwloc framework (default:\r\n                          0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n          MCA hwloc base: parameter \u001b[34m\"hwloc_base_mem_bind_failure_action\"\u001b[0m\r\n                          (current value: \u001b[32m\"warn\"\u001b[0m, data source: default,\r\n                          level: 9 dev/all, type: int)\r\n                          What Open MPI will do if it explicitly tries to\r\n                          bind memory to a specific NUMA location, and fails.\r\n                           Note that this is a different case than the\r\n                          general allocation policy described by\r\n                          hwloc_base_alloc_policy.  A value of \"silent\" means\r\n                          that Open MPI will proceed without comment. A value\r\n                          of \"warn\" means that Open MPI will warn the first\r\n                          time this happens, but allow the job to continue\r\n                          (possibly with degraded performance).  A value of\r\n                          \"error\" means that Open MPI will abort the job if\r\n                          this happens.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36msilent\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36merror\u001b[0m\r\n             MCA if base: ---------------------------------------------------\r\n             MCA if base: parameter \u001b[34m\"if\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the if\r\n                          framework (<none> means use all components that can\r\n                          be found)"]
[2.157705, "o", "\r\n             MCA if base: ---------------------------------------------------\r\n             MCA if base: parameter \u001b[34m\"if_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the if framework (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n             MCA if base: parameter \u001b[34m\"if_base_do_not_resolve\"\u001b[0m (current value:\r\n                          \u001b[32m\"false\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: bool)\r\n                          If nonzero, do not attempt to resolve interfaces\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n             MCA if base: parameter \u001b[34m\"if_base_retain_loopback\"\u001b[0m (current value:\r\n                          \u001b[32m\"false\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: bool)\r\n                          If nonzero, retain loopback interfaces\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n     MCA memchecker base: ---------------------------------------------------\r\n     MCA memchecker base: parameter \u001b[34m\"memchecker\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data\r\n                          source: default, level: 2 user/detail, type:\r\n                          string)\r\n                          Default selection set of components for the\r\n                          memchecker framework (<none> means use all\r\n                          components that can be found)\r\n     MCA memchecker base: ---------------------------------------------------\r\n     MCA memchecker base: parameter \u001b[34m\"memchecker_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the memchecker framework\r\n                          (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n         MCA memcpy base: ---------------------------------------------------\r\n         MCA memcpy base: parameter \u001b[34m\"memcpy\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the memcpy\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n         MCA memcpy base: ---------------------------------------------------\r\n         MCA memcpy base: parameter \u001b[34m\"memcpy_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the memcpy framework (default:\r\n                          0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                      "]
[2.15856, "o", "    \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n         MCA memory base: ---------------------------------------------------\r\n         MCA memory base: parameter \u001b[34m\"memory\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the memory\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n         MCA memory base: ---------------------------------------------------\r\n         MCA memory base: parameter \u001b[34m\"memory_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the memory framework (default:\r\n                          0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n      MCA memory patcher: ---------------------------------------------------\r\n"]
[2.15939, "o", "      MCA memory patcher: parameter \u001b[34m\"memory_patcher_priority\"\u001b[0m (current value:\r\n                          \u001b[32m\"80\"\u001b[0m, data source: default, level: 5 tuner/detail,\r\n                          type: int)\r\n                          Priority of the patcher memory hook component\r\n          MCA mpool base: ---------------------------------------------------\r\n          MCA mpool base: parameter \u001b[34m\"mpool\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the mpool\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n          MCA mpool base: ---------------------------------------------------\r\n          MCA mpool base: parameter \u001b[34m\"mpool_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the mpool framework (default:\r\n                          0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n      MCA mpool hugepage: ---------------------------------------------------\r\n      MCA mpool hugepage: parameter \u001b[34m\"mpool_hugepage_priority\"\u001b[0m (current value:\r\n                          \u001b[32m\"50\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Default priority of the hugepage mpool component\r\n                          (default: 50)\r\n      MCA mpool hugepage: parameter \u001b[34m\"mpool_hugepage_page_size\"\u001b[0m (current\r\n                          value: \u001b[32m\"2097152\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Default huge page size of the hugepage mpool\r\n                          component (default: 2M)\r\n      MCA mpool hugepage: performance \"mpool_hugepage_bytes_allocated\" (type:\r\n                          unsigned_long, class: size)\r\n                          Number of bytes currently allocated in the mpool\r\n                          hugepage component\r\n        MCA patcher base: ---------------------------------------------------\r\n        MCA patcher base: parameter \u001b[34m\"patcher\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data\r\n"]
[2.159999, "o", "                          source: default, level: 2 user/detail, type:\r\n                          string)\r\n                          Default selection set of components for the patcher\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n        MCA patcher base: ---------------------------------------------------\r\n        MCA patcher base: parameter \u001b[34m\"patcher_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the patcher framework (default:\r\n                          0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n   MCA patcher overwrite: ---------------------------------------------------\r\n   MCA patcher overwrite: parameter \u001b[34m\"patcher_overwrite_priority\"\u001b[0m (current\r\n                          value: \u001b[32m\"37\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Priority of the overwrite binary patcher component\r\n           MCA pmix base: ---------------------------------------------------\r\n           MCA pmix base: parameter \u001b[34m\"pmix\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the pmix\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n           MCA pmix base: ---------------------------------------------------\r\n           MCA pmix base: parameter \u001b[34m\"pmix_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the pmix framework (default: 0)\r\n"]
[2.160785, "o", "                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n           MCA pmix base: parameter \u001b[34m\"pmix_base_async_modex\"\u001b[0m (current value:\r\n                          \u001b[32m\"false\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: bool)\r\n                          Use asynchronous modex mode\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n           MCA pmix base: parameter \u001b[34m\"pmix_base_collect_data\"\u001b[0m (current value:\r\n                          \u001b[32m\"true\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: bool)\r\n                          Collect all data during modex\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n           MCA pmix base: parameter \u001b[34m\"pmix_base_exchange_timeout\"\u001b[0m (current\r\n                          value: \u001b[32m\"-1\"\u001b[0m, data source: default, level: 3\r\n                          user/all, type: int)\r\n                          Time (in seconds) to wait for a data exchange to\r\n                          complete\r\n         MCA rcache base: ---------------------------------------------------\r\n         MCA rcache base: parameter \u001b[34m\"rcache\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the rcache\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n         MCA rcache base: ---------------------------------------------------\r\n"]
[2.161486, "o", "         MCA rcache base: parameter \u001b[34m\"rcache_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the rcache framework (default:\r\n                          0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n        MCA rcache grdma: ---------------------------------------------------\r\n        MCA rcache grdma: parameter \u001b[34m\"rcache_grdma_print_stats\"\u001b[0m (current\r\n                          value: \u001b[32m\"false\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: bool)\r\n                          print registration cache usage statistics at the\r\n                          end of the run\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n"]
[2.162108, "o", "      MCA reachable base: ---------------------------------------------------\r\n      MCA reachable base: parameter \u001b[34m\"reachable\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data\r\n                          source: default, level: 2 user/detail, type:\r\n                          string)\r\n                          Default selection set of components for the\r\n                          reachable framework (<none> means use all\r\n                          components that can be found)\r\n      MCA reachable base: ---------------------------------------------------\r\n      MCA reachable base: parameter \u001b[34m\"reachable_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the reachable framework\r\n                          (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n          MCA shmem base: ---------------------------------------------------\r\n          MCA shmem base: parameter \u001b[34m\"shmem\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the shmem\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n          MCA shmem base: ---------------------------------------------------\r\n          MCA shmem base: parameter \u001b[34m\"shmem_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the shmem framework (default:\r\n                          0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n          MCA shmem mmap: ---------------------------------------------------\r\n          MCA shmem mmap: parameter \u001b[34m\"shmem_mmap_priority\"\u001b[0m (current value:\r\n"]
[2.162416, "o", "                          \u001b[32m\"50\"\u001b[0m, data source: default, level: 3 user/all,\r\n                          type: int)\r\n                          Priority for shmem mmap component (default: 50)\r\n          MCA shmem mmap: parameter \u001b[34m\"shmem_mmap_enable_nfs_warning\"\u001b[0m (current\r\n                          value: \u001b[32m\"true\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: bool)\r\n                          Enable the warning emitted when Open MPI detects\r\n                          that its shared memory backing file is located on a\r\n                          network filesystem (1 = enabled, 0 = disabled).\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n          MCA shmem mmap: parameter \u001b[34m\"shmem_mmap_relocate_backing_file\"\u001b[0m\r\n                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Whether to change the default placement of backing\r\n                          files or not (Negative = try to relocate backing\r\n                          files to an area rooted at the path specified by\r\n                          shmem_mmap_backing_file_base_dir, but continue with\r\n                          the default path if the relocation fails, 0 = do\r\n                          not relocate, Positive = same as the negative\r\n                          option, but will fail if the relocation fails.\r\n          MCA shmem mmap: parameter \u001b[34m\"shmem_mmap_backing_file_base_dir\"\u001b[0m\r\n                          (current value: \u001b[32m\"/dev/shm\"\u001b[0m, data source: default,\r\n                          level: 9 dev/all, type: string)\r\n                          Specifies where backing files will be created when\r\n                          shmem_mmap_relocate_backing_file is in use.\r\n         MCA shmem posix: ---------------------------------------------------\r\n"]
[2.163229, "o", "         MCA shmem posix: parameter \u001b[34m\"shmem_posix_priority\"\u001b[0m (current value:\r\n                          \u001b[32m\"40\"\u001b[0m, data source: default, level: 3 user/all,\r\n                          type: int)\r\n                          Priority for the shmem posix component (default:\r\n                          40)\r\n          MCA shmem sysv: ---------------------------------------------------\r\n          MCA shmem sysv: parameter \u001b[34m\"shmem_sysv_priority\"\u001b[0m (current value:\r\n                          \u001b[32m\"30\"\u001b[0m, data source: default, level: 3 user/all,\r\n                          type: int)\r\n                          Priority for the shmem sysv component (default: 30)\r\n           MCA smsc base: ---------------------------------------------------\r\n           MCA smsc base: parameter \u001b[34m\"smsc\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the smsc\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n           MCA smsc base: ---------------------------------------------------\r\n           MCA smsc base: parameter \u001b[34m\"smsc_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the smsc framework (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n            MCA smsc cma: ---------------------------------------------------\r\n            MCA smsc cma: parameter \u001b[34m\"smsc_cma_priority\"\u001b[0m (current value: \u001b[32m\"37\"\u001b[0m,\r\n                          data source: default, level: 3 user/all, type: int)\r\n                          Priority of the cma component (default: 37)\r\n        MCA threads base: ---------------------------------------------------\r\n        MCA threads base: parameter \u001b[34m\"threads\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data\r\n                          source: default, level: 2 user/detail, type:\r\n                          string)\r\n                          Default selection set of components for the threads\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n        MCA threads base: ---------------------------------------------------\r\n        MCA threads base: parameter \u001b[34m\"threads_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the threads framework (default:\r\n                          0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n    MCA threads pthreads: ---------------------------------------------------\r\n    MCA threads pthreads: parameter \u001b[34m\"threads_pthreads_yield_strategy\"\u001b[0m\r\n                          (current value: \u001b[32m\"sched_yield\"\u001b[0m, data source:\r\n                          default, level: 3 user/all, type: int)\r\n                          Pthread yield strategy to use\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36msched_yield\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mnanosleep\u001b[0m\r\n    MCA threads pthreads: parameter \u001b[34m\"threads_pthreads_nanosleep_time\"\u001b[0m\r\n                          (current value: \u001b[32m\"1\"\u001b[0m, data source: default, level: 3\r\n                          user/all, type: uint64_t)\r\n                          Number of nanoseconds to sleep when using nanosleep\r\n                          as the pthread yield strategy\r\n          MCA timer base: ---------------------------------------------------\r\n          MCA timer base: parameter \u001b[34m\"timer\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the timer\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n          MCA timer base: ---------------------------------------------------\r\n          MCA timer base: parameter \u001b[34m\"timer_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the timer framework (default:\r\n                          0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n       MCA timer require: ---------------------------------------------------\r\n       MCA timer require: parameter \u001b[34m\"timer_require_monotonic\"\u001b[0m (current value:\r\n                          \u001b[32m\"true\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: bool)\r\n                          Node-level monotonic timer required (default yes)\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n           MCA ompi base: ---------------------------------------------------\r\n           MCA ompi base: parameter \u001b[34m\"ompi_timing\"\u001b[0m (current value: \u001b[32m\"false\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type: bool)\r\n                          Request that critical timing loops be measured\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n           MCA ompi base: parameter \u001b[34m\"ompi_stream_buffering\"\u001b[0m (current value:\r\n                          \u001b[32m\"-1\"\u001b[0m, data source: default, level: 3 user/all,\r\n                          type: int)\r\n                          Adjust buffering for stdout/stderr. (0) unbuffered,\r\n                          (1) line buffered, (2) fully buffered.\r\n            MCA mpi base: ---------------------------------------------------\r\n            MCA mpi base: parameter \u001b[34m\"mpi_leave_pinned\"\u001b[0m (current value:\r\n                          \u001b[32m\"auto\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int, synonyms: opal_leave_pinned)\r\n                          Whether to use the \"leave pinned\" protocol or not. \r\n                          Enabling this setting can help bandwidth\r\n                          performance when repeatedly sending and receiving\r\n                          large messages with the same buffers over\r\n                          RDMA-based networks (false = do not use \"leave\r\n                          pinned\" protocol, true = use \"leave pinned\"\r\n                          protocol, auto = allow network to choose at\r\n                          runtime).\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mauto\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mpi base: parameter \u001b[34m\"mpi_leave_pinned_pipeline\"\u001b[0m (current\r\n                          value: \u001b[32m\"false\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: bool, synonyms:\r\n                          opal_leave_pinned_pipeline)\r\n                          Whether to use the \"leave pinned pipeline\" protocol\r\n                          or not.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mpi base: parameter \u001b[34m\"mpi_warn_on_fork\"\u001b[0m (current value:\r\n                          \u001b[32m\"true\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: bool)\r\n                          If nonzero, issue a warning if program forks under\r\n                          conditions that could cause system errors\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n"]
[2.163904, "o", "                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mpi base: parameter \u001b[34m\"mpi_param_check\"\u001b[0m (current value: \u001b[32m\"true\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type: bool)\r\n                          Whether you want MPI API parameters checked at\r\n                          run-time or not.  Possible values are 0 (no\r\n                          checking) and 1 (perform checking at run-time)\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mpi base: parameter \u001b[34m\"mpi_yield_when_idle\"\u001b[0m (current value:\r\n                          \u001b[32m\"false\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: bool)\r\n                          Yield the processor when waiting for MPI\r\n                          communication (for MPI processes, will default to 1\r\n                          when oversubscribing nodes)\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mpi base: parameter \u001b[34m\"mpi_event_tick_rate\"\u001b[0m (current value:\r\n                          \u001b[32m\"-1\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          How often to progress TCP communications (0 =\r\n                          never, otherwise specified in microseconds)\r\n            MCA mpi base: parameter \u001b[34m\"mpi_show_handle_leaks\"\u001b[0m (current value:\r\n                          \u001b[32m\"false\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: bool)\r\n                          Whether MPI_FINALIZE shows all MPI handles that\r\n                          were not freed or not\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mpi base: parameter \u001b[34m\"mpi_no_free_handles\"\u001b[0m (current value:\r\n                          \u001b[32m\"false\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: bool)\r\n                          Whether to actually free MPI objects when their\r\n                          handles are freed\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mpi base: parameter \u001b[34m\"mpi_show_mpi_alloc_mem_leaks\"\u001b[0m (current\r\n                          value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          If >0, MPI_FINALIZE will show up to this many\r\n                          instances of memory allocated by MPI_ALLOC_MEM that\r\n                          was not freed by MPI_FREE_MEM\r\n            MCA mpi base: parameter \u001b[34m\"mpi_show_mca_params\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type:\r\n                          string)"]
[2.164398, "o", "\r\n                          Whether to show all MCA parameter values during\r\n                          MPI_INIT or not (good for reproducibility of MPI\r\n                          jobs for debug purposes). Accepted values are all,\r\n                          default, file, api, and enviro - or a comma\r\n                          delimited combination of them\r\n            MCA mpi base: parameter \u001b[34m\"mpi_show_mca_params_file\"\u001b[0m (current\r\n                          value: \u001b[32m\"\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: string)\r\n                          If mpi_show_mca_params is true, setting this string\r\n                          to a valid filename tells 5.0.7 to dump all the MCA\r\n                          parameter values into a file suitable for reading\r\n                          via the mca_param_files parameter (good for\r\n                          reproducibility of MPI jobs)\r\n            MCA mpi base: parameter \u001b[34m\"mpi_preconnect_all\"\u001b[0m (current value:\r\n                          \u001b[32m\"false\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: bool, deprecated, synonym of:\r\n                          mpi_preconnect_mpi)\r\n                          Whether to force MPI processes to fully wire-up the\r\n                          MPI connections between MPI processes during\r\n                          MPI_INIT (vs. making connections lazily -- upon the\r\n                          first MPI traffic between each process peer pair)\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mpi base: informational \u001b[34m\"mpi_have_sparse_group_storage\"\u001b[0m\r\n                          (current value: \u001b[32m\"false\"\u001b[0m, data source: default,\r\n                          level: 9 dev/all, type: bool)\r\n                          Whether this 5.0.7 installation supports storing of\r\n                          data in MPI groups in \"sparse\" formats (good for\r\n                          extremely large process count MPI jobs that create\r\n                          many communicators/groups)\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mpi base: informational \u001b[34m\"mpi_use_sparse_group_storage\"\u001b[0m\r\n                          (current value: \u001b[32m\"false\"\u001b[0m, data source: default,\r\n                          level: 9 dev/all, type: bool)\r\n                          Whether to use \"sparse\" storage formats for MPI\r\n                          groups (only relevant if\r\n                          mpi_have_sparse_group_storage is 1)\r\n"]
[2.165034, "o", "                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mpi base: parameter \u001b[34m\"mpi_cuda_support\"\u001b[0m (current value:\r\n                          \u001b[32m\"false\"\u001b[0m, data source: default, level: 3 user/all,\r\n                          type: bool, deprecated, synonym of:\r\n                          opal_cuda_support)\r\n                          Whether CUDA GPU buffer support is enabled or not\r\n"]
[2.165358, "o", "                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mpi base: parameter \u001b[34m\"mpi_built_with_cuda_support\"\u001b[0m (current\r\n                          value: \u001b[32m\"false\"\u001b[0m, data source: default, level: 4\r\n                          tuner/basic, type: bool, synonym of:\r\n                          opal_built_with_cuda_support)\r\n                          Whether CUDA GPU buffer support is built into\r\n                          library or not\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mpi base: parameter \u001b[34m\"mpi_add_procs_cutoff\"\u001b[0m (current value:\r\n                          \u001b[32m\"0\"\u001b[0m, data source: default, level: 3 user/all, type:\r\n                          unsigned_int)\r\n                          Maximum world size for pre-allocating resources for\r\n                          all remote processes. Increasing this limit may\r\n                          improve communication performance at the cost of\r\n                          memory usage\r\n            MCA mpi base: parameter \u001b[34m\"mpi_dynamics_enabled\"\u001b[0m (current value:\r\n                          \u001b[32m\"true\"\u001b[0m, data source: default, level: 4 tuner/basic,\r\n                          type: bool)\r\n                          Is the MPI dynamic process functionality enabled\r\n                          (e.g., MPI_COMM_SPAWN)?  Default is yes, but\r\n                          certain transports and/or environments may disable\r\n                          it.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mpi base: parameter \u001b[34m\"mpi_abort_delay\"\u001b[0m (current value: \u001b[32m\"0\"\u001b[0m,\r\n                          data source: default, level: 5 tuner/detail, type:\r\n                          int, deprecated, synonym of: opal_abort_delay)\r\n                          If nonzero, print out an identifying message when\r\n                          abort operation is invoked (hostname, PID of the\r\n                          process that called abort) and delay for that many\r\n                          seconds before exiting (a negative delay value"]
[2.165847, "o", "\r\n                          means to never abort).  This allows attaching of a\r\n                          debugger before quitting the job.\r\n            MCA mpi base: parameter \u001b[34m\"mpi_abort_print_stack\"\u001b[0m (current value:\r\n                          \u001b[32m\"false\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: bool, deprecated, synonym of:\r\n                          opal_abort_print_stack)\r\n                          If nonzero, print out a stack trace when abort is\r\n                          invoked\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mpi base: parameter \u001b[34m\"mpi_compat_mpi3\"\u001b[0m (current value: \u001b[32m\"true\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type: bool)\r\n                          A boolean value for whether Open MPI operates in\r\n                          MPI-3 compatibility mode; this changes the\r\n                          following behavior: in operations without a handle,\r\n                          errors are raised on (true) MPI_COMM_WORLD (MPI-3\r\n                          behavior) or (false) MPI_COMM_SELF (MPI-4\r\n                          behavior).\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mpi base: parameter \u001b[34m\"mpi_pmix_connect_timeout\"\u001b[0m (current\r\n                          value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 3\r\n                          user/all, type: unsigned_int)\r\n                          Timeout(secs) for calls to PMIx_Connect. Default is\r\n                          no timeout.\r\n              MCA mpi ft: ---------------------------------------------------\r\n              MCA mpi ft: parameter \u001b[34m\"mpi_ft_enable\"\u001b[0m (current value: \u001b[32m\"false\"\u001b[0m,\r\n                          data source: default, level: 4 tuner/basic, type:\r\n                          bool)\r\n                          Enable UFLM MPI Fault Tolerance framework\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n              MCA mpi ft: parameter \u001b[34m\"mpi_ft_verbose\"\u001b[0m (current value: \u001b[32m\"32616\"\u001b[0m,\r\n                          data source: default, level: 8 dev/detail, type:\r\n                          int)\r\n                          Verbosity level of the ULFM MPI Fault Tolerance\r\n                          framework"]
[2.166713, "o", "\r\n              MCA mpi ft: parameter \u001b[34m\"mpi_ft_reliable_bcast\"\u001b[0m (current value:\r\n                          \u001b[32m\"1\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Reliable Broadcast algorithm (1: Binomial Graph\r\n                          Diffusion; 2: N^2 full graph diffusion)\r\n              MCA mpi ft: parameter \u001b[34m\"mpi_ft_propagator_with_rbcast\"\u001b[0m (current\r\n                          value: \u001b[32m\"false\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: bool)\r\n                          Use the OMPI reliable broadcast failure propagator,\r\n                          or disable it and use only RTE propagation (slower)\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n              MCA mpi ft: parameter \u001b[34m\"mpi_ft_detector\"\u001b[0m (current value:\r\n                          \u001b[32m\"false\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: bool)\r\n                          Use the OMPI heartbeat based failure detector, or\r\n                          disable it and use only RTE and in-band detection\r\n                          (slower)\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n              MCA mpi ft: parameter \u001b[34m\"mpi_ft_detector_thread\"\u001b[0m (current value:\r\n                          \u001b[32m\"false\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: bool)\r\n                          Delegate failure detector to a separate thread\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n              MCA mpi ft: parameter \u001b[34m\"mpi_ft_detector_period\"\u001b[0m (current value:\r\n                          \u001b[32m\"3.000000\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: double)\r\n                          Period of heartbeat emission (s)\r\n              MCA mpi ft: parameter \u001b[34m\"mpi_ft_detector_timeout\"\u001b[0m (current value:\r\n                          \u001b[32m\"10.000000\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: double)"]
[2.166948, "o", "\r\n                          Timeout before we start suspecting a process after\r\n                          the last heartbeat reception (must be larger than\r\n                          3*ompi_mpi_ft_detector_period)\r\n              MCA mpi ft: parameter \u001b[34m\"mpi_ft_detector_rdma_heartbeat\"\u001b[0m (current\r\n                          value: \u001b[32m\"false\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: bool)\r\n                          Use rdma put to deposit heartbeats into the\r\n                          observer memory\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA mpi comm: ---------------------------------------------------\r\n            MCA mpi comm: parameter \u001b[34m\"mpi_comm_verbose\"\u001b[0m (current value: \u001b[32m\"0\"\u001b[0m,\r\n                          data source: default, level: 8 dev/detail, type:\r\n                          int)\r\n                          Verbosity level for communicator management\r\n                          subsystem\r\n            MCA bml base: ---------------------------------------------------\r\n            MCA bml base: parameter \u001b[34m\"bml\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the bml\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n            MCA bml base: ---------------------------------------------------\r\n            MCA bml base: parameter \u001b[34m\"bml_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the bml framework (default: 0)\r\n"]
[2.167855, "o", "                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n              MCA bml r2: ---------------------------------------------------\r\n              MCA bml r2: parameter \u001b[34m\"bml_r2_show_unreach_errors\"\u001b[0m (current\r\n                          value: \u001b[32m\"true\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: bool)\r\n                          Show error message when procs are unreachable\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n           MCA coll base: ---------------------------------------------------\r\n           MCA coll base: parameter \u001b[34m\"coll\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the coll\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n           MCA coll base: ---------------------------------------------------\r\n           MCA coll base: parameter \u001b[34m\"coll_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the coll framework (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n          MCA coll adapt: ---------------------------------------------------\r\n          MCA coll adapt: parameter \u001b[34m\"coll_adapt_priority\"\u001b[0m (current value:\r\n                          \u001b[32m\"0\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Priority of the adapt coll component\r\n          MCA coll adapt: parameter \u001b[34m\"coll_adapt_verbose\"\u001b[0m (current value: \u001b[32m\"0\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type: int)\r\n                          Verbose level (default set to the collective\r\n                          framework verbosity)\r\n          MCA coll adapt: parameter \u001b[34m\"coll_adapt_context_free_list_min\"\u001b[0m\r\n                          (current value: \u001b[32m\"64\"\u001b[0m, data source: default, level:\r\n                          9 dev/all, type: int)\r\n                          Minimum number of segments in context free list\r\n          MCA coll adapt: parameter \u001b[34m\"coll_adapt_context_free_list_max\"\u001b[0m\r\n                          (current value: \u001b[32m\"1024\"\u001b[0m, data source: default,\r\n"]
[2.16862, "o", "                          level: 9 dev/all, type: int)\r\n                          Maximum number of segments in context free list\r\n          MCA coll adapt: parameter \u001b[34m\"coll_adapt_context_free_list_inc\"\u001b[0m\r\n                          (current value: \u001b[32m\"32\"\u001b[0m, data source: default, level:\r\n                          9 dev/all, type: int)\r\n                          Increasement number of segments in context free\r\n                          list\r\n          MCA coll adapt: parameter \u001b[34m\"coll_adapt_bcast_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"1\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Algorithm of broadcast, 0: tuned, 1: binomial, 2:\r\n                          in_order_binomial, 3: binary, 4: pipeline, 5:\r\n                          chain, 6: linear\r\n          MCA coll adapt: parameter \u001b[34m\"coll_adapt_bcast_segment_size\"\u001b[0m (current\r\n                          value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Segment size in bytes used by default for bcast\r\n                          algorithms. Only has meaning if algorithm is forced\r\n                          and supports segmenting. 0 bytes means no\r\n                          segmentation.\r\n          MCA coll adapt: parameter \u001b[34m\"coll_adapt_bcast_max_send_requests\"\u001b[0m\r\n                          (current value: \u001b[32m\"2\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Maximum number of send requests\r\n"]
[2.169271, "o", "          MCA coll adapt: parameter \u001b[34m\"coll_adapt_bcast_max_recv_requests\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Maximum number of receive requests\r\n          MCA coll adapt: parameter \u001b[34m\"coll_adapt_bcast_synchronous_send\"\u001b[0m\r\n                          (current value: \u001b[32m\"true\"\u001b[0m, data source: default,\r\n                          level: 9 dev/all, type: bool)\r\n                          Whether to use synchronous send operations during\r\n                          setup of bcast operations\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n          MCA coll adapt: parameter \u001b[34m\"coll_adapt_reduce_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"1\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Algorithm of reduce, 1: binomial, 2:\r\n                          in_order_binomial, 3: binary, 4: pipeline, 5:\r\n                          chain, 6: linear\r\n          MCA coll adapt: parameter \u001b[34m\"coll_adapt_reduce_segment_size\"\u001b[0m (current\r\n                          value: \u001b[32m\"163740\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: size_t)\r\n                          Segment size in bytes used by default for reduce\r\n                          algorithms. Only has meaning if algorithm is forced\r\n                          and supports segmenting. 0 bytes means no\r\n                          segmentation.\r\n          MCA coll adapt: parameter \u001b[34m\"coll_adapt_reduce_max_send_requests\"\u001b[0m\r\n                          (current value: \u001b[32m\"2\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Maximum number of send requests\r\n          MCA coll adapt: parameter \u001b[34m\"coll_adapt_reduce_max_recv_requests\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Maximum number of receive requests per peer\r\n          MCA coll adapt: parameter \u001b[34m\"coll_adapt_inbuf_free_list_min\"\u001b[0m (current\r\n"]
[2.169815, "o", "                          value: \u001b[32m\"10\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Minimum number of segment in inbuf free list\r\n          MCA coll adapt: parameter \u001b[34m\"coll_adapt_inbuf_free_list_max\"\u001b[0m (current\r\n                          value: \u001b[32m\"10000\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Maximum number of segment in inbuf free list\r\n          MCA coll adapt: parameter \u001b[34m\"coll_adapt_inbuf_free_list_inc\"\u001b[0m (current\r\n                          value: \u001b[32m\"10\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Number of segments to allocate when growing the\r\n                          inbuf free list\r\n"]
[2.17015, "o", "          MCA coll adapt: parameter \u001b[34m\"coll_adapt_reduce_synchronous_send\"\u001b[0m\r\n                          (current value: \u001b[32m\"true\"\u001b[0m, data source: default,\r\n                          level: 9 dev/all, type: bool)\r\n                          Whether to use synchronous send operations during\r\n                          setup of reduce operations\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n          MCA coll basic: ---------------------------------------------------\r\n          MCA coll basic: parameter \u001b[34m\"coll_basic_priority\"\u001b[0m (current value:\r\n                          \u001b[32m\"10\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Priority of the basic coll component\r\n          MCA coll basic: parameter \u001b[34m\"coll_basic_crossover\"\u001b[0m (current value:\r\n                          \u001b[32m\"4\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Minimum number of processes in a communicator\r\n                          before using the logarithmic algorithms\r\n            MCA coll han: ---------------------------------------------------\r\n            MCA coll han: parameter \u001b[34m\"coll_han_priority\"\u001b[0m (current value: \u001b[32m\"35\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type: int)\r\n                          Priority of the HAN coll component\r\n            MCA coll han: parameter \u001b[34m\"coll_han_verbose\"\u001b[0m (current value: \u001b[32m\"0\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type: int)\r\n                          Verbosity of the HAN coll component (use coll base\r\n                          verbosity if not set)\r\n            MCA coll han: parameter \u001b[34m\"coll_han_bcast_segsize\"\u001b[0m (current value:\r\n                          \u001b[32m\"65536\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          segment size for bcast\r\n            MCA coll han: parameter \u001b[34m\"coll_han_bcast_up_module\"\u001b[0m (current\r\n                          value: \u001b[32m\"self\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: string)\r\n                          up level module for bcast, 0 libnbc, 1 adapt\r\n            MCA coll han: parameter \u001b[34m\"coll_han_bcast_low_module\"\u001b[0m (current\r\n                          value: \u001b[32m\"self\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: string)\r\n                          low level module for bcast, 0 tuned, 1 sm\r\n            MCA coll han: parameter \u001b[34m\"coll_han_reduce_segsize\"\u001b[0m (current value:"]
[2.170982, "o", "\r\n                          \u001b[32m\"65536\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          segment size for reduce\r\n            MCA coll han: parameter \u001b[34m\"coll_han_reduce_up_module\"\u001b[0m (current\r\n                          value: \u001b[32m\"self\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: string)\r\n                          up level module for allreduce, 0 libnbc, 1 adapt\r\n            MCA coll han: parameter \u001b[34m\"coll_han_reduce_low_module\"\u001b[0m (current\r\n                          value: \u001b[32m\"self\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: string)\r\n                          low level module for allreduce, 0 tuned, 1 sm\r\n            MCA coll han: parameter \u001b[34m\"coll_han_allreduce_segsize\"\u001b[0m (current\r\n                          value: \u001b[32m\"65536\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          segment size for allreduce\r\n            MCA coll han: parameter \u001b[34m\"coll_han_allreduce_up_module\"\u001b[0m (current\r\n                          value: \u001b[32m\"self\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: string)\r\n                          up level module for allreduce, 0 libnbc, 1 adapt\r\n            MCA coll han: parameter \u001b[34m\"coll_han_allreduce_low_module\"\u001b[0m (current\r\n                          value: \u001b[32m\"self\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: string)\r\n                          low level module for allreduce, 0 tuned, 1 sm\r\n            MCA coll han: parameter \u001b[34m\"coll_han_allgather_up_module\"\u001b[0m (current\r\n                          value: \u001b[32m\"self\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: string)\r\n                          up level module for allgather, 0 libnbc, 1 adapt\r\n            MCA coll han: parameter \u001b[34m\"coll_han_allgather_low_module\"\u001b[0m (current\r\n                          value: \u001b[32m\"self\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: string)\r\n                          low level module for allgather, 0 tuned, 1 sm\r\n            MCA coll han: parameter \u001b[34m\"coll_han_gather_up_module\"\u001b[0m (current\r\n                          value: \u001b[32m\"self\"\u001b[0m, data source: default, level: 9"]
[2.171899, "o", "\r\n                          dev/all, type: string)\r\n                          up level module for gather, 0 libnbc, 1 adapt\r\n            MCA coll han: parameter \u001b[34m\"coll_han_gather_low_module\"\u001b[0m (current\r\n                          value: \u001b[32m\"self\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: string)\r\n                          low level module for gather, 0 tuned, 1 sm\r\n            MCA coll han: parameter \u001b[34m\"coll_han_scatter_up_module\"\u001b[0m (current\r\n                          value: \u001b[32m\"self\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: string)\r\n                          up level module for scatter, 0 libnbc, 1 adapt\r\n            MCA coll han: parameter \u001b[34m\"coll_han_scatter_low_module\"\u001b[0m (current\r\n                          value: \u001b[32m\"self\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: string)\r\n                          low level module for scatter, 0 tuned, 1 sm\r\n            MCA coll han: parameter \u001b[34m\"coll_han_reproducible\"\u001b[0m (current value:\r\n                          \u001b[32m\"false\"\u001b[0m, data source: default, level: 3 user/all,\r\n                          type: bool)\r\n                          whether we need reproducible results (enabling this\r\n                          disables optimisations using topology)0 disable 1\r\n                          enable, default 0\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA coll han: parameter \u001b[34m\"coll_han_use_allgather_algorithm\"\u001b[0m\r\n                          (current value: \u001b[32m\"default\"\u001b[0m, data source: default,\r\n                          level: 5 tuner/detail, type: int)\r\n                          which han algorithm is used for allgather\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mdefault\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mintra\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36msimple\u001b[0m\r\n            MCA coll han: parameter \u001b[34m\"coll_han_use_allreduce_algorithm\"\u001b[0m\r\n                          (current value: \u001b[32m\"default\"\u001b[0m, data source: default,\r\n                          level: 5 tuner/detail, type: int)\r\n                          which han algorithm is used for allreduce\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mdefault\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mintra\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36msimple\u001b[0m,\r\n                          \u001b[36m3\u001b[0m|\u001b[36mreproducible\u001b[0m\r\n            MCA coll han: parameter \u001b[34m\"coll_han_use_barrier_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"default\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          which han algorithm is used for barrier\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mdefault\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36msimple\u001b[0m\r\n            MCA coll han: parameter \u001b[34m\"coll_han_use_bcast_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"default\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          which han algorithm is used for bcast\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mdefault\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mintra\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36msimple\u001b[0m\r\n            MCA coll han: parameter \u001b[34m\"coll_han_use_gather_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"default\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          which han algorithm is used for gather\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mdefault\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mintra\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36msimple\u001b[0m\r\n            MCA coll han: parameter \u001b[34m\"coll_han_use_reduce_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"default\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          which han algorithm is used for reduce\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mdefault\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mintra\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36msimple\u001b[0m,\r\n                          \u001b[36m3\u001b[0m|\u001b[36mreproducible\u001b[0m\r\n            MCA coll han: parameter \u001b[34m\"coll_han_use_scatter_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"default\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          which han algorithm is used for scatter\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mdefault\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mintra\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36msimple\u001b[0m\r\n            MCA coll han: parameter \u001b[34m\"coll_han_use_simple_allgather\"\u001b[0m (current\r\n                          value: \u001b[32m\"false\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: bool, deprecated)\r\n                          whether to enable simple algorithm for allgather.\r\n                          Prefer use_allgather_algorithm=simple or\r\n                          configuration file instead.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA coll han: parameter \u001b[34m\"coll_han_use_simple_allreduce\"\u001b[0m (current\r\n                          value: \u001b[32m\"false\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: bool, deprecated)\r\n                          whether to enable simple algorithm for allreduce.\r\n                          Prefer use_allreduce_algorithm=simple or\r\n                          configuration file instead.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA coll han: parameter \u001b[34m\"coll_han_use_simple_bcast\"\u001b[0m (current\r\n"]
[2.172634, "o", "                          value: \u001b[32m\"false\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: bool, deprecated)\r\n                          whether to enable simple algorithm for bcast.\r\n                          Prefer use_bcast_algorithm=simple or configuration\r\n                          file instead.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA coll han: parameter \u001b[34m\"coll_han_use_simple_gather\"\u001b[0m (current\r\n                          value: \u001b[32m\"true\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: bool, deprecated)\r\n                          whether to enable simple algorithm for gather.\r\n                          Prefer use_gather_algorithm=simple or configuration\r\n                          file instead.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA coll han: parameter \u001b[34m\"coll_han_use_simple_reduce\"\u001b[0m (current\r\n                          value: \u001b[32m\"false\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: bool, deprecated)\r\n                          whether to enable simple algorithm for reduce.\r\n                          Prefer use_reduce_algorithm=simple or configuration\r\n                          file instead.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA coll han: parameter \u001b[34m\"coll_han_use_simple_scatter\"\u001b[0m (current\r\n                          value: \u001b[32m\"false\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: bool, deprecated)\r\n                          whether to enable simple algorithm for scatter.\r\n                          Prefer use_scatter_algorithm=simple or\r\n                          configuration file instead.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_allgather_dynamic_intra_node_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for allgather on\r\n                          intra_node topological level: 0 = self; 1 = basic;\r\n                          2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_allgather_dynamic_inter_node_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for allgather on\r\n                          inter_node topological level: 0 = self; 1 = basic;\r\n                          2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_allgather_dynamic_global_communicator_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"6\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for allgather on\r\n                          global_communicator topological level: 0 = self; 1\r\n                          = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;\r\n                          6 = han;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_allgatherv_dynamic_intra_node_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for allgatherv on\r\n                          intra_node topological level: 0 = self; 1 = basic;\r\n                          2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_allgatherv_dynamic_inter_node_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for allgatherv on\r\n                          inter_node topological level: 0 = self; 1 = basic;\r\n                          2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_allgatherv_dynamic_global_communicator_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"6\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for allgatherv on\r\n                          global_communicator topological level: 0 = self; 1\r\n                          = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;\r\n                          6 = han;"]
[2.173138, "o", "\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_allreduce_dynamic_intra_node_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for allreduce on\r\n                          intra_node topological level: 0 = self; 1 = basic;\r\n                          2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_allreduce_dynamic_inter_node_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for allreduce on\r\n                          inter_node topological level: 0 = self; 1 = basic;\r\n                          2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_allreduce_dynamic_global_communicator_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"6\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for allreduce on\r\n                          global_communicator topological level: 0 = self; 1\r\n                          = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;\r\n                          6 = han;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_barrier_dynamic_intra_node_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for barrier on intra_node\r\n                          topological level: 0 = self; 1 = basic; 2 = libnbc;\r\n                          3 = tuned; 4 = sm; 5 = adapt;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_barrier_dynamic_inter_node_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for barrier on inter_node\r\n                          topological level: 0 = self; 1 = basic; 2 = libnbc;\r\n                          3 = tuned; 4 = sm; 5 = adapt;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_barrier_dynamic_global_communicator_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"6\"\u001b[0m, data source: default, level: 9\r\n"]
[2.173608, "o", "                          dev/all, type: int)\r\n                          Collective module to use for barrier on\r\n                          global_communicator topological level: 0 = self; 1\r\n                          = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;\r\n                          6 = han;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_bcast_dynamic_intra_node_module\"\u001b[0m (current\r\n                          value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          Collective module to use for bcast on intra_node\r\n                          topological level: 0 = self; 1 = basic; 2 = libnbc;\r\n                          3 = tuned; 4 = sm; 5 = adapt;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_bcast_dynamic_inter_node_module\"\u001b[0m (current\r\n                          value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          Collective module to use for bcast on inter_node\r\n                          topological level: 0 = self; 1 = basic; 2 = libnbc;\r\n                          3 = tuned; 4 = sm; 5 = adapt;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_bcast_dynamic_global_communicator_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"6\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for bcast on\r\n                          global_communicator topological level: 0 = self; 1\r\n                          = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;\r\n                          6 = han;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_gather_dynamic_intra_node_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for gather on intra_node\r\n                          topological level: 0 = self; 1 = basic; 2 = libnbc;\r\n                          3 = tuned; 4 = sm; 5 = adapt;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_gather_dynamic_inter_node_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for gather on inter_node\r\n                          topological level: 0 = self; 1 = basic; 2 = libnbc;\r\n                          3 = tuned; 4 = sm; 5 = adapt;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_gather_dynamic_global_communicator_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"6\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for gather on\r\n                          global_communicator topological level: 0 = self; 1\r\n                          = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;\r\n                          6 = han;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_reduce_dynamic_intra_node_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for reduce on intra_node\r\n                          topological level: 0 = self; 1 = basic; 2 = libnbc;\r\n                          3 = tuned; 4 = sm; 5 = adapt;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_reduce_dynamic_inter_node_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for reduce on inter_node\r\n                          topological level: 0 = self; 1 = basic; 2 = libnbc;\r\n                          3 = tuned; 4 = sm; 5 = adapt;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_reduce_dynamic_global_communicator_module\"\u001b[0m"]
[2.173944, "o", "\r\n                          (current value: \u001b[32m\"6\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for reduce on\r\n                          global_communicator topological level: 0 = self; 1\r\n                          = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;\r\n                          6 = han;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_scatter_dynamic_intra_node_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for scatter on intra_node\r\n                          topological level: 0 = self; 1 = basic; 2 = libnbc;"]
[2.174678, "o", "\r\n                          3 = tuned; 4 = sm; 5 = adapt;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_scatter_dynamic_inter_node_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Collective module to use for scatter on inter_node\r\n                          topological level: 0 = self; 1 = basic; 2 = libnbc;\r\n                          3 = tuned; 4 = sm; 5 = adapt;\r\n            MCA coll han: parameter\r\n                          \u001b[34m\"coll_han_scatter_dynamic_global_communicator_module\"\u001b[0m\r\n                          (current value: \u001b[32m\"6\"\u001b[0m, data source: default, level: 9"]
[2.175214, "o", "\r\n                          dev/all, type: int)\r\n                          Collective module to use for scatter on\r\n                          global_communicator topological level: 0 = self; 1\r\n                          = basic; 2 = libnbc; 3 = tuned; 4 = sm; 5 = adapt;\r\n                          6 = han;\r\n"]
[2.17592, "o", "            MCA coll han: parameter \u001b[34m\"coll_han_use_dynamic_file_rules\"\u001b[0m\r\n                          (current value: \u001b[32m\"false\"\u001b[0m, data source: default,\r\n                          level: 6 tuner/all, type: bool)\r\n                          Enable the dynamic selection provided via the\r\n                          dynamic_rules_filename MCA\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA coll han: parameter \u001b[34m\"coll_han_dynamic_rules_filename\"\u001b[0m\r\n                          (current value: \u001b[32m\"\"\u001b[0m, data source: default, level: 6\r\n                          tuner/all, type: string)\r\n                          Configuration file containing the dynamic selection\r\n                          rules\r\n            MCA coll han: parameter \u001b[34m\"coll_han_dump_dynamic_rules\"\u001b[0m (current\r\n                          value: \u001b[32m\"false\"\u001b[0m, data source: default, level: 6\r\n                          tuner/all, type: bool)\r\n                          Switch used to decide if we dump  dynamic rules\r\n                          provided by configuration file\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA coll han: parameter \u001b[34m\"coll_han_max_dynamic_errors\"\u001b[0m (current\r\n                          value: \u001b[32m\"10\"\u001b[0m, data source: default, level: 6"]
[2.176282, "o", "\r\n                          tuner/all, type: int)\r\n                          Number of dynamic rules module/function errors\r\n                          printed on rank 0 with a 0 verbosity.Useless if\r\n                          coll_base_verbose is 30 or more.\r\n          MCA coll inter: ---------------------------------------------------\r\n"]
[2.176783, "o", "          MCA coll inter: parameter \u001b[34m\"coll_inter_priority\"\u001b[0m (current value:\r\n"]
[2.177389, "o", "                          \u001b[32m\"40\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Priority of the inter coll component\r\n"]
[2.178169, "o", "          MCA coll inter: parameter \u001b[34m\"coll_inter_verbose\"\u001b[0m (current value: \u001b[32m\"0\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type: int)\r\n                          Turn verbose message of the inter coll component\r\n                          on/off\r\n         MCA coll libnbc: ---------------------------------------------------\r\n         MCA coll libnbc: parameter \u001b[34m\"coll_libnbc_priority\"\u001b[0m (current value:\r\n                          \u001b[32m\"10\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Priority of the libnbc coll component\r\n         MCA coll libnbc: parameter \u001b[34m\"coll_libnbc_ibcast_skip_dt_decision\"\u001b[0m\r\n                          (current value: \u001b[32m\"true\"\u001b[0m, data source: default,\r\n                          level: 9 dev/all, type: bool)\r\n                          In ibcast only use size of communicator to choose\r\n                          algorithm, exclude data type signature. Set to\r\n                          'false' to use data type signature in decision.\r\n                          WARNING: If you set this to 'false' then your\r\n                          application should not use non-uniform data type\r\n                          signatures in calls to ibcast.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n         MCA coll libnbc: parameter \u001b[34m\"coll_libnbc_iallgather_algorithm\"\u001b[0m\r\n                          (current value: \u001b[32m\"ignore\"\u001b[0m, data source: default,\r\n                          level: 5 tuner/detail, type: int)\r\n                          Which iallgather algorithm is used: 0 ignore, 1\r\n                          linear, 2 recursive_doubling\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mlinear\u001b[0m,\r\n                          \u001b[36m2\u001b[0m|\u001b[36mrecursive_doubling\u001b[0m\r\n         MCA coll libnbc: parameter \u001b[34m\"coll_libnbc_iallreduce_algorithm\"\u001b[0m\r\n                          (current value: \u001b[32m\"ignore\"\u001b[0m, data source: default,\r\n                          level: 5 tuner/detail, type: int)\r\n                          Which iallreduce algorithm is used: 0 ignore, 1\r\n                          ring, 2 binomial, 3 rabenseifner, 4\r\n                          recursive_doubling\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mring\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36mbinomial\u001b[0m,\r\n                          \u001b[36m3\u001b[0m|\u001b[36mrabenseifner\u001b[0m, \u001b[36m4\u001b[0m|\u001b[36mrecursive_doubling\u001b[0m\r\n         MCA coll libnbc: parameter \u001b[34m\"coll_libnbc_ibcast_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"ignore\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Which ibcast algorithm is used: 0 ignore, 1 linear,\r\n                          2 binomial, 3 chain, 4 knomial\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mlinear\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36mbinomial\u001b[0m,\r\n                          \u001b[36m3\u001b[0m|\u001b[36mchain\u001b[0m, \u001b[36m4\u001b[0m|\u001b[36mknomial\u001b[0m\r\n         MCA coll libnbc: parameter \u001b[34m\"coll_libnbc_ibcast_knomial_radix\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          k-nomial tree radix for the ibcast algorithm (radix\r\n"]
[2.178898, "o", "                          > 1)\r\n         MCA coll libnbc: parameter \u001b[34m\"coll_libnbc_iexscan_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"ignore\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Which iexscan algorithm is used: 0 ignore, 1\r\n                          linear, 2 recursive_doubling\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mlinear\u001b[0m,\r\n                          \u001b[36m2\u001b[0m|\u001b[36mrecursive_doubling\u001b[0m\r\n         MCA coll libnbc: parameter \u001b[34m\"coll_libnbc_ireduce_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"ignore\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Which ireduce algorithm is used: 0 ignore, 1 chain,\r\n                          2 binomial, 3 rabenseifner\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mchain\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36mbinomial\u001b[0m,\r\n                          \u001b[36m3\u001b[0m|\u001b[36mrabenseifner\u001b[0m\r\n         MCA coll libnbc: parameter \u001b[34m\"coll_libnbc_iscan_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"ignore\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Which iscan algorithm is used: 0 ignore, 1 linear,\r\n                          2 recursive_doubling\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mlinear\u001b[0m,\r\n                          \u001b[36m2\u001b[0m|\u001b[36mrecursive_doubling\u001b[0m\r\n           MCA coll self: ---------------------------------------------------\r\n           MCA coll self: parameter \u001b[34m\"coll_self_priority\"\u001b[0m (current value:\r\n                          \u001b[32m\"75\"\u001b[0m, data source: default, level: 9 dev/all, type:"]
[2.179158, "o", "\r\n                          int)\r\n           MCA coll sync: ---------------------------------------------------\r\n           MCA coll sync: parameter \u001b[34m\"coll_sync_priority\"\u001b[0m (current value:\r\n                          \u001b[32m\"50\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Priority of the sync coll component; only relevant\r\n                          if barrier_before or barrier_after is > 0\r\n           MCA coll sync: parameter \u001b[34m\"coll_sync_barrier_before\"\u001b[0m (current\r\n                          value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          Do a synchronization before each Nth collective\r\n           MCA coll sync: parameter \u001b[34m\"coll_sync_barrier_after\"\u001b[0m (current value:\r\n                          \u001b[32m\"0\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Do a synchronization after each Nth collective\r\n          MCA coll tuned: ---------------------------------------------------\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_priority\"\u001b[0m (current value:\r\n                          \u001b[32m\"30\"\u001b[0m, data source: default, level: 6 tuner/all,\r\n                          type: int)\r\n                          Priority of the tuned coll component\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_init_tree_fanout\"\u001b[0m (current\r\n                          value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 6\r\n                          tuner/all, type: int)\r\n"]
[2.179805, "o", "                          Initial fanout used in the tree topologies for each\r\n                          communicator. This is only an initial guess, if a\r\n                          tuned collective needs a different fanout for an\r\n                          operation, it build it dynamically. This parameter\r\n                          is only for the first guess and might save a little\r\n                          time\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_init_chain_fanout\"\u001b[0m (current\r\n                          value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 6\r\n                          tuner/all, type: int)\r\n                          Initial fanout used in the chain (fanout followed\r\n                          by pipeline) topologies for each communicator. This\r\n                          is only an initial guess, if a tuned collective\r\n                          needs a different fanout for an operation, it build\r\n                          it dynamically. This parameter is only for the\r\n                          first guess and might save a little time\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_alltoall_small_msg\"\u001b[0m (current\r\n                          value: \u001b[32m\"200\"\u001b[0m, data source: default, level: 6\r\n                          tuner/all, type: int)\r\n                          threshold (if supported) to decide if small MSGs\r\n                          alltoall algorithm will be used\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_alltoall_intermediate_msg\"\u001b[0m\r\n                          (current value: \u001b[32m\"3000\"\u001b[0m, data source: default,\r\n                          level: 6 tuner/all, type: int)\r\n                          threshold (if supported) to decide if intermediate\r\n                          MSGs alltoall algorithm will be used\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_use_dynamic_rules\"\u001b[0m (current\r\n                          value: \u001b[32m\"false\"\u001b[0m, data source: default, level: 6\r\n                          tuner/all, type: bool)\r\n                          Switch used to decide if we use static (compiled/if\r\n                          statements) or dynamic (built at runtime) decision\r\n                          function rules\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_dynamic_rules_filename\"\u001b[0m\r\n                          (current value: \u001b[32m\"\"\u001b[0m, data source: default, level: 6\r\n                          tuner/all, type: string)\r\n                          Filename of configuration file that contains the\r\n                          dynamic (@runtime) decision function rules\r\n          MCA coll tuned: informational\r\n                          \u001b[34m\"coll_tuned_allreduce_algorithm_count\"\u001b[0m (current\r\n                          value: \u001b[32m\"7\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Number of allreduce algorithms available\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_allreduce_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"ignore\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Which allreduce algorithm is used. Can be locked\r\n                          down to any of: 0 ignore, 1 basic linear, 2\r\n                          nonoverlapping (tuned reduce + tuned bcast), 3\r\n                          recursive doubling, 4 ring, 5 segmented ring. Only\r\n                          relevant if coll_tuned_use_dynamic_rules is true.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mbasic_linear\u001b[0m,\r\n                          \u001b[36m2\u001b[0m|\u001b[36mnonoverlapping\u001b[0m, \u001b[36m3\u001b[0m|\u001b[36mrecursive_doubling\u001b[0m, \u001b[36m4\u001b[0m|\u001b[36mring\u001b[0m,\r\n                          \u001b[36m5\u001b[0m|\u001b[36msegmented_ring\u001b[0m, \u001b[36m6\u001b[0m|\u001b[36mrabenseifner\u001b[0m\r\n          MCA coll tuned: pa"]
[2.180425, "o", "rameter\r\n                          \u001b[34m\"coll_tuned_allreduce_algorithm_segmentsize\"\u001b[0m\r\n                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Segment size in bytes used by default for allreduce\r\n                          algorithms. Only has meaning if algorithm is forced\r\n                          and supports segmenting. 0 bytes means no\r\n                          segmentation.\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_allreduce_algorithm_tree_fanout\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Fanout for n-tree used for allreduce algorithms.\r\n                          Only has meaning if algorithm is forced and\r\n                          supports n-tree topo based operation.\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_allreduce_algorithm_chain_fanout\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Fanout for chains used for allreduce algorithms.\r\n                          Only has meaning if algorithm is forced and\r\n                          supports chain topo based operation.\r\n          MCA coll tuned: informational \u001b[34m\"coll_tuned_alltoall_algorithm_count\"\u001b[0m\r\n                          (current value: \u001b[32m\"6\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Number of alltoall algorithms available\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_alltoall_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"ignore\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Which alltoall algorithm is used. Can be locked\r\n                          down to choice of: 0 ignore, 1 basic linear, 2\r\n                          pairwise, 3: modified bruck, 4: linear with sync,\r\n                          5:two proc only. Only relevant if\r\n                          coll_tuned_use_dynamic_rules is true.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mlinear\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36mpairwise\u001b[0m,\r\n                          \u001b[36m3\u001b[0m|\u001b[36mmodified_bruck\u001b[0m, \u001b[36m4\u001b[0m|\u001b[36mlinear_sync\u001b[0m, \u001b[36m5\u001b[0m|\u001b[36mtwo_proc\u001b[0m\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_alltoall_algorithm_segmentsize\"\u001b[0m\r\n                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Segment size in bytes used by default for alltoall\r\n                          algorithms. Only has meaning if algorithm is forced\r\n                          and supports segmenting. 0 bytes means no\r\n                          segmentation.\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_alltoall_algorithm_tree_fanout\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Fanout for n-tree used for alltoall algorithms.\r\n                          Only has meaning if algorithm is forced and\r\n                          supports n-tree topo based operation.\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_alltoall_algorithm_chain_fanout\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Fanout for chains used for alltoall algorithms.\r\n                          Only has meaning if algorithm is forced and\r\n                          supports chain topo based operation.\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_alltoall_large_msg\"\u001b[0m (current\r\n                          value: \u001b[32m\"3000\"\u001b[0m, data source: default, level: 6\r\n                          tuner/all, type: int)\r\n                          use pairwise exchange algorithm for messages larger\r\n                          than this value\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_alltoall_min_procs\"\u001b[0m (current\r\n                          value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 6\r\n                          tuner/all, type: int)\r\n                          use pairwise exchange algorithm for communicators\r\n                          larger than this value\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_alltoall_algorithm_max_requests\"\u001b[0m\r\n                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Maximum number of outstanding send or recv\r\n                          requests.  Only has meaning for synchronized\r\n                          algorithms.\r\n          MCA coll tuned: informational\r\n                          \u001b[34m\"coll_tuned_allgather_algorithm_count\"\u001b[0m (current\r\n                          value: \u001b[32m\"8\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Number of allgather algorithms available\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_allgather_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"ignore\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Which allgather algorithm is used. Can be locked\r\n                          down to choice of: 0 ignore, 1 basic linear, 2\r\n                          bruck, 3 recursive doubling, 4 ring, 5 neighbor\r\n                          exchange, 6: two proc only, 7: sparbit. Only\r\n                          relevant if coll_tuned_use_dynamic_rules is true.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mlinear\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36mbruck\u001b[0m,\r\n                          \u001b[36m3\u001b[0m|\u001b[36mrecursive_doubling\u001b[0m, \u001b[36m4\u001b[0m|\u001b[36mring\u001b[0m, \u001b[36m5\u001b[0m|\u001b[36mneighbor\u001b[0m,\r\n                          \u001b[36m6\u001b[0m|\u001b[36mtwo_proc\u001b[0m, \u001b[36m7\u001b[0m|\u001b[36msparbit\u001b[0m\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_allgather_algorithm_segmentsize\"\u001b[0m\r\n                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Segment size in bytes used by default for allgather\r\n                          algorithms. Only has meaning if algorithm is forced\r\n                          and supports segmenting. 0 bytes means no\r\n                          segmentation. Currently, available algorithms do\r\n                          not support segmentation.\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_allgather_algorithm_tree_fanout\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)"]
[2.18073, "o", "\r\n                          Fanout for n-tree used for allgather algorithms.\r\n                          Only has meaning if algorithm is forced and\r\n                          supports n-tree topo based operation. Currently,\r\n                          available algorithms do not support n-tree\r\n                          topologies.\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_allgather_algorithm_chain_fanout\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Fanout for chains used for allgather algorithms.\r\n                          Only has meaning if algorithm is forced and\r\n                          supports chain topo based operation. Currently,\r\n                          available algorithms do not support chain\r\n                          topologies.\r\n          MCA coll tuned: informational\r\n                          \u001b[34m\"coll_tuned_allgatherv_algorithm_count\"\u001b[0m (current\r\n                          value: \u001b[32m\"7\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Number of allgatherv algorithms available\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_allgatherv_algorithm\"\u001b[0m\r\n                          (current value: \u001b[32m\"ignore\"\u001b[0m, data source: default,\r\n                          level: 5 tuner/detail, type: int)\r\n                          Which allgatherv algorithm is used. Can be locked"]
[2.181444, "o", "\r\n                          down to choice of: 0 ignore, 1 default (allgathervv\r\n                          + bcast), 2 bruck, 3 ring, 4 neighbor exchange, 5:\r\n                          two proc only, 6: sparbit. Only relevant if\r\n                          coll_tuned_use_dynamic_rules is true.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mdefault\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36mbruck\u001b[0m, \u001b[36m3\u001b[0m|\u001b[36mring\u001b[0m,\r\n                          \u001b[36m4\u001b[0m|\u001b[36mneighbor\u001b[0m, \u001b[36m5\u001b[0m|\u001b[36mtwo_proc\u001b[0m, \u001b[36m6\u001b[0m|\u001b[36msparbit\u001b[0m\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_allgatherv_algorithm_segmentsize\"\u001b[0m\r\n                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Segment size in bytes used by default for\r\n                          allgatherv algorithms. Only has meaning if\r\n                          algorithm is forced and supports segmenting. 0\r\n                          bytes means no segmentation. Currently, available\r\n                          algorithms do not support segmentation.\r\n"]
[2.18178, "o", "          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_allgatherv_algorithm_tree_fanout\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Fanout for n-tree used for allgatherv algorithms.\r\n                          Only has meaning if algorithm is forced and\r\n                          supports n-tree topo based operation. Currently,\r\n                          available algorithms do not support n-tree\r\n                          topologies.\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_allgatherv_algorithm_chain_fanout\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Fanout for chains used for allgatherv algorithms.\r\n                          Only has meaning if algorithm is forced and\r\n                          supports chain topo based operation. Currently,\r\n                          available algorithms do not support chain\r\n                          topologies.\r\n          MCA coll tuned: informational\r\n                          \u001b[34m\"coll_tuned_alltoallv_algorithm_count\"\u001b[0m (current\r\n                          value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Number of alltoallv algorithms available\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_alltoallv_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"ignore\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Which alltoallv algorithm is used. Can be locked\r\n                          down to choice of: 0 ignore, 1 basic linear, 2\r\n                          pairwise. Only relevant if\r\n                          coll_tuned_use_dynamic_rules is true.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mbasic_linear\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36mpairwise\u001b[0m\r\n          MCA coll tuned: informational \u001b[34m\"coll_tuned_barrier_algorithm_count\"\u001b[0m\r\n                          (current value: \u001b[32m\"7\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Number of barrier algorithms available\r\n"]
[2.182178, "o", "          MCA coll tuned: parameter \u001b[34m\"coll_tuned_barrier_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"ignore\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Which barrier algorithm is used. Can be locked down\r\n                          to choice of: 0 ignore, 1 linear, 2 double ring, 3:\r\n                          recursive doubling 4: bruck, 5: two proc only, 6:\r\n                          tree. Only relevant if coll_tuned_use_dynamic_rules\r\n                          is true.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mlinear\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36mdouble_ring\u001b[0m,\r\n                          \u001b[36m3\u001b[0m|\u001b[36mrecursive_doubling\u001b[0m, \u001b[36m4\u001b[0m|\u001b[36mbruck\u001b[0m, \u001b[36m5\u001b[0m|\u001b[36mtwo_proc\u001b[0m, \u001b[36m6\u001b[0m|\u001b[36mtree\u001b[0m\r\n          MCA coll tuned: informational \u001b[34m\"coll_tuned_bcast_algorithm_count\"\u001b[0m\r\n                          (current value: \u001b[32m\"10\"\u001b[0m, data source: default, level:\r\n                          5 tuner/detail, type: int)\r\n                          Number of bcast algorithms available\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_bcast_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"ignore\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Which bcast algorithm is used. Can be locked down\r\n                          to choice of: 0 ignore, 1 basic linear, 2 chain, 3:"]
[2.182657, "o", "\r\n                          pipeline, 4: split binary tree, 5: binary tree, 6:\r\n                          binomial tree, 7: knomial tree, 8:\r\n                          scatter_allgather, 9: scatter_allgather_ring. Only\r\n                          relevant if coll_tuned_use_dynamic_rules is true.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mbasic_linear\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36mchain\u001b[0m,\r\n                          \u001b[36m3\u001b[0m|\u001b[36mpipeline\u001b[0m, \u001b[36m4\u001b[0m|\u001b[36msplit_binary_tree\u001b[0m, \u001b[36m5\u001b[0m|\u001b[36mbinary_tree\u001b[0m,\r\n                          \u001b[36m6\u001b[0m|\u001b[36mbinomial\u001b[0m, \u001b[36m7\u001b[0m|\u001b[36mknomial\u001b[0m, \u001b[36m8\u001b[0m|\u001b[36mscatter_allgather\u001b[0m,\r\n                          \u001b[36m9\u001b[0m|\u001b[36mscatter_allgather_ring\u001b[0m\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_bcast_algorithm_segmentsize\"\u001b[0m\r\n                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Segment size in bytes used by default for bcast\r\n                          algorithms. Only has meaning if algorithm is forced\r\n                          and supports segmenting. 0 bytes means no\r\n                          segmentation."]
[2.183185, "o", "\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_bcast_algorithm_tree_fanout\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Fanout for n-tree used for bcast algorithms. Only\r\n                          has meaning if algorithm is forced and supports\r\n                          n-tree topo based operation.\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_bcast_algorithm_chain_fanout\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Fanout for chains used for bcast algorithms. Only\r\n                          has meaning if algorithm is forced and supports\r\n                          chain topo based operation.\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_bcast_algorithm_knomial_radix\"\u001b[0m (current"]
[2.183686, "o", "\r\n                          value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          k-nomial tree radix for the bcast algorithm (radix\r\n                          > 1).\r\n          MCA coll tuned: informational \u001b[34m\"coll_tuned_reduce_algorithm_count\"\u001b[0m\r\n                          (current value: \u001b[32m\"8\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Number of reduce algorithms available\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_reduce_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"ignore\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Which reduce algorithm is used. Can be locked down\r\n                          to choice of: 0 ignore, 1 linear, 2 chain, 3\r\n"]
[2.184194, "o", "                          pipeline, 4 binary, 5 binomial, 6 in-order binary,\r\n                          7 rabenseifner. Only relevant if\r\n                          coll_tuned_use_dynamic_rules is true.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mlinear\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36mchain\u001b[0m,\r\n                          \u001b[36m3\u001b[0m|\u001b[36mpipeline\u001b[0m, \u001b[36m4\u001b[0m|\u001b[36mbinary\u001b[0m, \u001b[36m5\u001b[0m|\u001b[36mbinomial\u001b[0m,\r\n                          \u001b[36m6\u001b[0m|\u001b[36min-order_binary\u001b[0m, \u001b[36m7\u001b[0m|\u001b[36mrabenseifner\u001b[0m\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_reduce_algorithm_segmentsize\"\u001b[0m\r\n                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Segment size in bytes used by default for reduce\r\n                          algorithms. Only has meaning if algorithm is forced\r\n                          and supports segmenting. 0 bytes means no\r\n                          segmentation.\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_reduce_algorithm_tree_fanout\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Fanout for n-tree used for reduce algorithms. Only\r\n                          has meaning if algorithm is forced and supports\r\n                          n-tree topo based operation.\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_reduce_algorithm_chain_fanout\"\u001b[0m (current\r\n                          value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Fanout for chains used for reduce algorithms. Only\r\n                          has meaning if algorithm is forced and supports\r\n                          chain topo based operation.\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_reduce_algorithm_max_requests\"\u001b[0m (current\r\n                          value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Maximum number of outstanding send requests on leaf\r\n                          nodes. 0 means no limit.\r\n          MCA coll tuned: informational\r\n                          \u001b[34m\"coll_tuned_reduce_scatter_algorithm_count\"\u001b[0m\r\n                          (current value: \u001b[32m\"5\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Number of reduce_scatter algorithms available\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_reduce_scatter_algorithm\"\u001b[0m\r\n                          (current value: \u001b[32m\"ignore\"\u001b[0m, data source: default,\r\n                          level: 5 tuner/detail, type: int)\r\n                          Which reduce reduce_scatter algorithm is used. Can"]
[2.184594, "o", "\r\n                          be locked down to choice of: 0 ignore, 1\r\n                          non-overlapping (Reduce + Scatterv), 2 recursive\r\n                          halving, 3 ring, 4 butterfly. Only relevant if\r\n                          coll_tuned_use_dynamic_rules is true.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mnon-overlapping\u001b[0m,\r\n                          \u001b[36m2\u001b[0m|\u001b[36mrecursive_halving\u001b[0m, \u001b[36m3\u001b[0m|\u001b[36mring\u001b[0m, \u001b[36m4\u001b[0m|\u001b[36mbutterfly\u001b[0m\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_reduce_scatter_algorithm_segmentsize\"\u001b[0m\r\n                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Segment size in bytes used by default for\r\n                          reduce_scatter algorithms. Only has meaning if\r\n                          algorithm is forced and supports segmenting. 0\r\n                          bytes means no segmentation.\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_reduce_scatter_algorithm_tree_fanout\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Fanout for n-tree used for reduce_scatter\r\n                          algorithms. Only has meaning if algorithm is forced\r\n                          and supports n-tree topo based operation.\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_reduce_scatter_algorithm_chain_fanout\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Fanout for chains used for reduce_scatter\r\n                          algorithms. Only has meaning if algorithm is forced\r\n                          and supports chain topo based operation.\r\n          MCA coll tuned: informational\r\n                          \u001b[34m\"coll_tuned_reduce_scatter_block_algorithm_count\"\u001b[0m"]
[2.185125, "o", "\r\n                          (current value: \u001b[32m\"5\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Number of reduce_scatter_block algorithms available\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_reduce_scatter_block_algorithm\"\u001b[0m\r\n                          (current value: \u001b[32m\"ignore\"\u001b[0m, data source: default,\r\n                          level: 5 tuner/detail, type: int)\r\n                          Which reduce reduce_scatter_block algorithm is\r\n                          used. Can be locked down to choice of: 0 ignore, 1\r\n                          basic_linear, 2 recursive_doubling, 3\r\n                          recursive_halving, 4 butterfly. Only relevant if\r\n                          coll_tuned_use_dynamic_rules is true.\r\n"]
[2.185642, "o", "                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mbasic_linear\u001b[0m,\r\n                          \u001b[36m2\u001b[0m|\u001b[36mrecursive_doubling\u001b[0m, \u001b[36m3\u001b[0m|\u001b[36mrecursive_halving\u001b[0m,\r\n                          \u001b[36m4\u001b[0m|\u001b[36mbutterfly\u001b[0m\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_reduce_scatter_block_algorithm_segmentsize\"\u001b[0m\r\n                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Segment size in bytes used by default for\r\n                          reduce_scatter_block algorithms. Only has meaning\r\n                          if algorithm is forced and supports segmenting. 0\r\n                          bytes means no segmentation.\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_reduce_scatter_block_algorithm_tree_fanout\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Fanout for n-tree used for reduce_scatter_block\r\n                          algorithms. Only has meaning if algorithm is forced"]
[2.186264, "o", "\r\n                          and supports n-tree topo based operation.\r\n          MCA coll tuned: informational \u001b[34m\"coll_tuned_gather_algorithm_count\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Number of gather algorithms available\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_gather_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"ignore\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Which gather algorithm is used. Can be locked down\r\n                          to choice of: 0 ignore, 1 basic linear, 2 binomial,\r\n                          3 linear with synchronization. Only relevant if\r\n                          coll_tuned_use_dynamic_rules is true.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mbasic_linear\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36mbinomial\u001b[0m,\r\n                          \u001b[36m3\u001b[0m|\u001b[36mlinear_sync\u001b[0m\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_gather_algorithm_segmentsize\"\u001b[0m\r\n                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Segment size in bytes used by default for gather\r\n                          algorithms. Only has meaning if algorithm is forced\r\n                          and supports segmenting. 0 bytes means no\r\n                          segmentation. Currently, available algorithms do\r\n                          not support segmentation.\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_gather_algorithm_tree_fanout\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Fanout for n-tree used for gather algorithms. Only\r\n                          has meaning if algorithm is forced and supports"]
[2.186884, "o", "\r\n                          n-tree topo based operation. Currently, available\r\n                          algorithms do not support n-tree topologies.\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_gather_algorithm_chain_fanout\"\u001b[0m (current\r\n                          value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Fanout for chains used for gather algorithms. Only\r\n                          has meaning if algorithm is forced and supports\r\n                          chain topo based operation. Currently, available\r\n                          algorithms do not support chain topologies.\r\n          MCA coll tuned: informational \u001b[34m\"coll_tuned_scatter_algorithm_count\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Number of scatter algorithms available\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_scatter_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"ignore\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Which scatter algorithm is used. Can be locked down\r\n                          to choice of: 0 ignore, 1 basic linear, 2 binomial,\r\n                          3 non-blocking linear. Only relevant if\r\n                          coll_tuned_use_dynamic_rules is true.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mbasic_linear\u001b[0m, \u001b[36m2\u001b[0m|\u001b[36mbinomial\u001b[0m,\r\n                          \u001b[36m3\u001b[0m|\u001b[36mlinear_nb\u001b[0m\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_scatter_algorithm_segmentsize\"\u001b[0m (current\r\n                          value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Segment size in bytes used by default for scatter\r\n                          algorithms. Only has meaning if algorithm is forced\r\n                          and supports segmenting. 0 bytes means no\r\n                          segmentation. Currently, available algorithms do\r\n                          not support segmentation.\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_scatter_algorithm_tree_fanout\"\u001b[0m (current\r\n                          value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Fanout for n-tree used for scatter algorithms. Only\r\n                          has meaning if algorithm is forced and supports\r\n                          n-tree topo based operation. Currently, available\r\n                          algorithms do not support n-tree topologies.\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_scatter_algorithm_chain_fanout\"\u001b[0m\r\n                          (current value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Fanout for chains used for scatter algorithms. Only\r\n                          has meaning if algorithm is forced and supports\r\n"]
[2.187645, "o", "                          chain topo based operation. Currently, available\r\n                          algorithms do not support chain topologies.\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_scatter_min_procs\"\u001b[0m (current\r\n                          value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 6\r\n                          tuner/all, type: int)\r\n                          use basic linear algorithm for communicators larger\r\n                          than this value\r\n          MCA coll tuned: parameter\r\n                          \u001b[34m\"coll_tuned_scatter_algorithm_max_requests\"\u001b[0m\r\n                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Issue a blocking send every this many non-blocking\r\n                          requests. Only has meaning for non-blocking linear\r\n                          algorithm.\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_scatter_intermediate_msg\"\u001b[0m\r\n                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 6\r\n                          tuner/all, type: int)\r\n                          use non-blocking linear algorithm for messages\r\n                          larger than this value\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_scatter_large_msg\"\u001b[0m (current\r\n                          value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 6\r\n                          tuner/all, type: int)\r\n                          use linear algorithm for messages larger than this\r\n                          value\r\n          MCA coll tuned: informational \u001b[34m\"coll_tuned_exscan_algorithm_count\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 5\r\n"]
[2.188397, "o", "                          tuner/detail, type: int)\r\n                          Number of exscan algorithms available\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_exscan_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"ignore\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Which exscan algorithm is used. Can be locked down\r\n                          to choice of: 0 ignore, 1 linear, 2\r\n                          recursive_doubling. Only relevant if\r\n                          coll_tuned_use_dynamic_rules is true.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mlinear\u001b[0m,\r\n                          \u001b[36m2\u001b[0m|\u001b[36mrecursive_doubling\u001b[0m\r\n          MCA coll tuned: informational \u001b[34m\"coll_tuned_scan_algorithm_count\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Number of scan algorithms available\r\n          MCA coll tuned: parameter \u001b[34m\"coll_tuned_scan_algorithm\"\u001b[0m (current\r\n                          value: \u001b[32m\"ignore\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Which scan algorithm is used. Can be locked down to\r\n                          choice of: 0 ignore, 1 linear, 2\r\n                          recursive_doubling. Only relevant if\r\n                          coll_tuned_use_dynamic_rules is true.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mignore\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mlinear\u001b[0m,\r\n                          \u001b[36m2\u001b[0m|\u001b[36mrecursive_doubling\u001b[0m\r\n        MCA coll ftagree: ---------------------------------------------------\r\n        MCA coll ftagree: parameter \u001b[34m\"coll_ftagree_priority\"\u001b[0m (current value:\r\n                          \u001b[32m\"30\"\u001b[0m, data source: default, level: 6 tuner/all,\r\n                          type: int)\r\n                          Priority of the ftagree coll component\r\n        MCA coll ftagree: parameter \u001b[34m\"coll_ftagree_agreement\"\u001b[0m (current value:\r\n                          \u001b[32m\"21856\"\u001b[0m, data source: default, level: 6 tuner/all,\r\n                          type: int)\r\n                          Agreement algorithm 0: Allreduce (NOT FAULT\r\n                          TOLERANT); 1: Early Returning Consensus (era); 2:\r\n                          Early Terminating Consensus (eta)\r\n        MCA coll ftagree: parameter \u001b[34m\"coll_ftagree_era_topology\"\u001b[0m (current\r\n                          value: \u001b[32m\"1\"\u001b[0m, data source: default, level: 6\r\n                          tuner/all, type: int)\r\n                          ERA topology 1: binary tree; 2: star tree; 3:\r\n                          string tree\r\n        MCA coll ftagree: parameter \u001b[34m\"coll_ftagree_era_rebuild\"\u001b[0m (current\r\n                          value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 6\r\n                          tuner/all, type: int)\r\n                          ERA rebuild/rebalance the tree in a first\r\n                          post-failure agreement 0: no rebalancing; 1:\r\n                          rebalance all the time\r\n     MCA coll monitoring: ---------------------------------------------------\r\n     MCA coll monitoring: performance \"coll_monitoring_messages_count\" (type:\r\n                          unsigned_long_long, class: size)\r\n                          Number of messages exchanged through the COLL\r\n                          framework with each peer.\r\n     MCA coll monitoring: performance \"coll_monitoring_messages_size\" (type:\r\n                          unsigned_long_long, class: size)\r\n                          Size of messages exchanged through the COLL\r\n                          framework with each peer.\r\n     MCA coll monitoring: performance \"coll_monitoring_o2a_count\" (type:\r\n                          unsigned_long_long, class: counter)\r\n                          Number of messages exchanged as one-to-all\r\n                          operations in a communicator.\r\n     MCA coll monitoring: performance \"coll_monitoring_o2a_size\" (type:\r\n                          unsigned_long_long, class: aggregate)\r\n                          Size of messages exchanged as one-to-all operations\r\n                          in a communicator.\r\n"]
[2.189628, "o", "     MCA coll monitoring: performance \"coll_monitoring_a2o_count\" (type:\r\n                          unsigned_long_long, class: counter)\r\n                          Number of messages exchanged as all-to-one\r\n                          operations in a communicator.\r\n     MCA coll monitoring: performance \"coll_monitoring_a2o_size\" (type:\r\n                          unsigned_long_long, class: aggregate)\r\n                          Size of messages exchanged as all-to-one operations\r\n                          in a communicator.\r\n     MCA coll monitoring: performance \"coll_monitoring_a2a_count\" (type:\r\n                          unsigned_long_long, class: counter)\r\n                          Number of messages exchanged as all-to-all\r\n                          operations in a communicator.\r\n     MCA coll monitoring: performance \"coll_monitoring_a2a_size\" (type:\r\n                          unsigned_long_long, class: aggregate)\r\n                          Size of messages exchanged as all-to-all operations\r\n                          in a communicator.\r\n             MCA coll sm: ---------------------------------------------------\r\n             MCA coll sm: parameter \u001b[34m\"coll_sm_priority\"\u001b[0m (current value: \u001b[32m\"0\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type: int)\r\n                          Priority of the sm coll component\r\n             MCA coll sm: parameter \u001b[34m\"coll_sm_control_size\"\u001b[0m (current value:\r\n                          \u001b[32m\"4096\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          Length of the control data -- should usually be\r\n                          either the length of a cache line on most SMPs, or\r\n                          the size of a page on machines that support direct\r\n                          memory affinity page placement (in bytes)\r\n             MCA coll sm: parameter \u001b[34m\"coll_sm_fragment_size\"\u001b[0m (current value:\r\n                          \u001b[32m\"8192\"\u001b[0m, data source: default, level: 9 dev/all,\r\n"]
[2.190366, "o", "                          type: int)\r\n                          Fragment size (in bytes) used for passing data\r\n                          through shared memory (will be rounded up to the\r\n                          nearest control_size size)\r\n             MCA coll sm: parameter \u001b[34m\"coll_sm_comm_in_use_flags\"\u001b[0m (current\r\n                          value: \u001b[32m\"2\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          Number of \"in use\" flags, used to mark a message\r\n                          passing area segment as currently being used or not\r\n                          (must be >= 2 and <= comm_num_segments)\r\n             MCA coll sm: parameter \u001b[34m\"coll_sm_comm_num_segments\"\u001b[0m (current\r\n                          value: \u001b[32m\"8\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          Number of segments in each communicator's shared\r\n                          memory message passing area (must be >= 2, and must\r\n                          be a multiple of comm_in_use_flags)\r\n             MCA coll sm: parameter \u001b[34m\"coll_sm_tree_degree\"\u001b[0m (current value:\r\n                          \u001b[32m\"4\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Degree of the tree for tree-based operations (must\r\n                          be => 1 and <= min(control_size, 255))\r\n             MCA coll sm: parameter \u001b[34m\"coll_sm_info_num_procs\"\u001b[0m (current value:\r\n                          \u001b[32m\"4\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Number of processes to use for the calculation of\r\n                          the shared_mem_size MCA information parameter (must\r\n"]
[2.191071, "o", "                          be => 2)\r\n             MCA coll sm: informational \u001b[34m\"coll_sm_shared_mem_used_data\"\u001b[0m\r\n                          (current value: \u001b[32m\"548864\"\u001b[0m, data source: default,\r\n                          level: 9 dev/all, type: int)\r\n                          Amount of shared memory used, per communicator, in\r\n                          the shared memory data area for info_num_procs\r\n                          processes (in bytes)\r\n           MCA fbtl base: ---------------------------------------------------\r\n           MCA fbtl base: parameter \u001b[34m\"fbtl\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the fbtl\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n           MCA fbtl base: ---------------------------------------------------\r\n           MCA fbtl base: parameter \u001b[34m\"fbtl_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the fbtl framework (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n          MCA fbtl posix: ---------------------------------------------------\r\n          MCA fbtl posix: parameter \u001b[34m\"fbtl_posix_priority\"\u001b[0m (current value:\r\n                          \u001b[32m\"10\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Priority of the fbtl posix component\r\n          MCA fbtl posix: parameter \u001b[34m\"fbtl_posix_max_block_size\"\u001b[0m (current\r\n                          value: \u001b[32m\"1048576\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: size_t)\r\n                          Maximum average size in bytes of a data block in an\r\n                          iovec for data sieving. An average block size\r\n                          larger than this parameter will disable data\r\n                          sieving. Default: 1048576 bytes.\r\n          MCA fbtl posix: parameter \u001b[34m\"fbtl_posix_max_gap_size\"\u001b[0m (current value:\r\n                          \u001b[32m\"4096\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: size_t)\r\n                          Maximum average gap size between two blocks in an\r\n                          iovec for data sieving. An average gap size larger\r\n                          than this parameter will disable data sieving.\r\n                          Default: 4096 bytes.\r\n          MCA fbtl posix: parameter \u001b[34m\"fbtl_posix_max_tmpbuf_size\"\u001b[0m (current\r\n                          value: \u001b[32m\"67108864\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: size_t)\r\n                          Maximum size of the temporary buffer used for data\r\n                          sieving in bytes. Default: 67108864 (64MB).\r\n"]
[2.191362, "o", "          MCA fbtl posix: parameter \u001b[34m\"fbtl_posix_read_datasieving\"\u001b[0m (current\r\n                          value: \u001b[32m\"true\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: bool)\r\n                          Parameter indicating whether to perform data\r\n                          sieving for read operations. Default: true.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n          MCA fbtl posix: parameter \u001b[34m\"fbtl_posix_write_datasieving\"\u001b[0m (current\r\n                          value: \u001b[32m\"true\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: bool)\r\n                          Parameter indicating whether to perform data\r\n                          sieving for write operations. Default: true.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n          MCA fcoll base: ---------------------------------------------------\r\n          MCA fcoll base: parameter \u001b[34m\"fcoll\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the fcoll\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n          MCA fcoll base: ---------------------------------------------------\r\n          MCA fcoll base: parameter \u001b[34m\"fcoll_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the fcoll framework (default:\r\n                          0)"]
[2.192184, "o", "\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n       MCA fcoll dynamic: ---------------------------------------------------\r\n       MCA fcoll dynamic: parameter \u001b[34m\"fcoll_dynamic_priority\"\u001b[0m (current value:\r\n                          \u001b[32m\"10\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Priority of the dynamic fcoll component\r\n  MCA fcoll dynamic_gen2: ---------------------------------------------------\r\n"]
[2.192504, "o", "  MCA fcoll dynamic_gen2: parameter \u001b[34m\"fcoll_dynamic_gen2_priority\"\u001b[0m (current\r\n                          value: \u001b[32m\"10\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Priority of the dynamic_gen2 fcoll component\r\n  MCA fcoll dynamic_gen2: parameter \u001b[34m\"fcoll_dynamic_gen2_num_groups\"\u001b[0m (current\r\n                          value: \u001b[32m\"1\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          Number of subgroups created by the dynamic_gen2\r\n                          component\r\n    MCA fcoll individual: ---------------------------------------------------\r\n    MCA fcoll individual: parameter \u001b[34m\"fcoll_individual_priority\"\u001b[0m (current\r\n                          value: \u001b[32m\"10\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Priority of the individual fcoll component\r\n        MCA fcoll vulcan: ---------------------------------------------------\r\n        MCA fcoll vulcan: parameter \u001b[34m\"fcoll_vulcan_priority\"\u001b[0m (current value:\r\n                          \u001b[32m\"10\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Priority of the vulcan fcoll component\r\n        MCA fcoll vulcan: parameter \u001b[34m\"fcoll_vulcan_num_groups\"\u001b[0m (current value:\r\n                          \u001b[32m\"1\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Number of subgroups created by the vulcan component\r\n        MCA fcoll vulcan: parameter \u001b[34m\"fcoll_vulcan_write_chunksize\"\u001b[0m (current\r\n                          value: \u001b[32m\"-1\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Chunk size written at once. Default: stripe_size of\r\n                          the file system\r\n        MCA fcoll vulcan: parameter \u001b[34m\"fcoll_vulcan_async_io\"\u001b[0m (current value:\r\n                          \u001b[32m\"0\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Asynchronous I/O support options. 0: Automatic\r\n                          choice (default) 1: Asynchronous I/O only. 2:\r\n                          Synchronous I/O only.\r\n"]
[2.193501, "o", "             MCA fs base: ---------------------------------------------------\r\n             MCA fs base: parameter \u001b[34m\"fs\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the fs\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n             MCA fs base: ---------------------------------------------------\r\n             MCA fs base: parameter \u001b[34m\"fs_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the fs framework (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n              MCA fs ufs: ---------------------------------------------------\r\n              MCA fs ufs: parameter \u001b[34m\"fs_ufs_priority\"\u001b[0m (current value: \u001b[32m\"10\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type: int)\r\n                          Priority of the fs ufs component\r\n              MCA fs ufs: parameter \u001b[34m\"fs_ufs_lock_algorithm\"\u001b[0m (current value:\r\n                          \u001b[32m\"0\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Locking algorithm used by the fs ufs component.  0:\r\n                          auto (default), 1: skip locking, 2: always lock\r\n                          entire file, 3: lock only specific ranges\r\n           MCA hook base: ---------------------------------------------------\r\n           MCA hook base: parameter \u001b[34m\"hook\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the hook\r\n                          framework (<none> means use all components that can"]
[2.194434, "o", "\r\n                          be found)\r\n           MCA hook base: ---------------------------------------------------\r\n           MCA hook base: parameter \u001b[34m\"hook_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the hook framework (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n    MCA hook comm_method: ---------------------------------------------------\r\n    MCA hook comm_method: parameter \u001b[34m\"hook_comm_method_verbose\"\u001b[0m (current\r\n                          value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n    MCA hook comm_method: parameter \u001b[34m\"hook_comm_method_display\"\u001b[0m (current\r\n                          value: \u001b[32m\"\"\u001b[0m, data source: default, level: 3 user/all,\r\n                          type: unsigned_int, synonyms: ompi_display_comm)\r\n                          Enable the communication protocol report: when\r\n                          MPI_INIT is invoked (using the 'mpi_init' value)\r\n                          and/or when MPI_FINALIZE is invoked (using the\r\n                          'mpi_finalize' value).\r\n                          Valid values: Comma-delimited list of: \r\n                          \u001b[36m0x1\u001b[0m|\u001b[36mmpi_init\u001b[0m, \u001b[36m0x2\u001b[0m|\u001b[36mmpi_finalize\u001b[0m\r\n    MCA hook comm_method: parameter \u001b[34m\"hook_comm_method_max\"\u001b[0m (current value:\r\n                          \u001b[32m\"12\"\u001b[0m, data source: default, level: 3 user/all,\r\n                          type: int)\r\n                          Number of hosts for which to print unabbreviated 2d\r\n                          table of comm methods."]
[2.195339, "o", "\r\n    MCA hook comm_method: parameter \u001b[34m\"hook_comm_method_brief\"\u001b[0m (current value:\r\n                          \u001b[32m\"false\"\u001b[0m, data source: default, level: 3 user/all,\r\n                          type: bool)\r\n                          Only print the comm method summary, skip the 2d\r\n                          table.\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n    MCA hook comm_method: parameter \u001b[34m\"hook_comm_method_fakefile\"\u001b[0m (current\r\n                          value: \u001b[32m\"\"\u001b[0m, data source: default, level: 3 user/all,\r\n                          type: string)\r\n                          For debugging only: read comm methods from a file\r\n             MCA io base: ---------------------------------------------------\r\n             MCA io base: parameter \u001b[34m\"io\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the io\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n             MCA io base: ---------------------------------------------------\r\n             MCA io base: parameter \u001b[34m\"io_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the io framework (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n            MCA io ompio: ---------------------------------------------------\r\n            MCA io ompio: parameter \u001b[34m\"io_ompio_priority\"\u001b[0m (current value: \u001b[32m\"30\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type: int)\r\n                          Priority of the io ompio component\r\n            MCA io ompio: parameter \u001b[34m\"io_ompio_delete_priority\"\u001b[0m (current\r\n                          value: \u001b[32m\"30\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Delete priority of the io ompio component\r\n            MCA io ompio: parameter \u001b[34m\"io_ompio_record_file_offset_info\"\u001b[0m\r\n                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          The information of the file offset/length\r\n            MCA io ompio: parameter \u001b[34m\"io_ompio_coll_timing_info\"\u001b[0m (current"]
[2.195988, "o", "\r\n                          value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          Enable collective algorithm timing information\r\n            MCA io ompio: parameter \u001b[34m\"io_ompio_cycle_buffer_size\"\u001b[0m (current\r\n                          value: \u001b[32m\"536870912\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Data size issued by individual reads/writes per\r\n                          call\r\n            MCA io ompio: parameter \u001b[34m\"io_ompio_pipeline_buffer_size\"\u001b[0m (current\r\n                          value: \u001b[32m\"1048576\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Size of temporary buffer used by individual\r\n                          reads/writes in the pipeline protocol\r\n            MCA io ompio: parameter \u001b[34m\"io_ompio_bytes_per_agg\"\u001b[0m (current value:\r\n                          \u001b[32m\"33554432\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)"]
[2.196562, "o", "\r\n                          Size of temporary buffer for collective I/O\r\n                          operations\r\n            MCA io ompio: parameter \u001b[34m\"io_ompio_num_aggregators\"\u001b[0m (current\r\n                          value: \u001b[32m\"-1\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          number of aggregators for collective I/O operations\r\n            MCA io ompio: parameter \u001b[34m\"io_ompio_grouping_option\"\u001b[0m (current\r\n                          value: \u001b[32m\"5\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          Option for grouping of processes in the aggregator\r\n                          selection 1: Data volume based grouping 2:\r\n                          maximizing group size uniformity 3: maximimze data\r\n                          contiguity 4: hybrid optimization  5: simple\r\n                          (default) 6: skip refinement step 7: simple+:\r\n                          grouping based on default file view\r\n            MCA io ompio: parameter \u001b[34m\"io_ompio_max_aggregators_ratio\"\u001b[0m (current\r\n                          value: \u001b[32m\"8\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          Maximum number of processes that can be an\r\n                          aggregator expressed as the ratio to the number of\r\n                          process used to open the file i.e 1 out of n\r\n                          processes can be an aggregator, with n being\r\n                          specified by this mca parameter.\r\n            MCA io ompio: parameter \u001b[34m\"io_ompio_aggregators_cutoff_threshold\"\u001b[0m\r\n                          (current value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Relative cutoff threshold for incrementing the\r\n                          number of aggregators in the simple aggregator\r\n                          selection algorithm (5). Lower value for this\r\n                          parameter will lead to higher no. of aggregators.\r\n            MCA io ompio: parameter \u001b[34m\"io_ompio_overwrite_amode\"\u001b[0m (current\r\n                          value: \u001b[32m\"1\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          Overwrite WRONLY amode to RDWR to enable data\r\n                          sieving 1: allow overwrite (default) 0: do not\r\n                          overwrite amode provided by application"]
[2.197154, "o", "\r\n            MCA io ompio: parameter \u001b[34m\"io_ompio_verbose_info_parsing\"\u001b[0m (current\r\n                          value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          Provide visual output when parsing info objects 0:\r\n                          no verbose output (default) 1: verbose output by\r\n                          rank 0 2: verbose output by all ranks\r\n         MCA io romio341: ---------------------------------------------------\r\n         MCA io romio341: parameter \u001b[34m\"io_romio341_priority\"\u001b[0m (current value:\r\n                          \u001b[32m\"10\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Priority of the io romio component\r\n         MCA io romio341: parameter \u001b[34m\"io_romio341_delete_priority\"\u001b[0m (current\r\n                          value: \u001b[32m\"10\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Delete priority of the io romio component\r\n         MCA io romio341: informational \u001b[34m\"io_romio341_version\"\u001b[0m (current value:\r\n                          \u001b[32m\"from MPICH v3.4.1\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: string)\r\n                          Version of ROMIO\r\n         MCA io romio341: informational \u001b[34m\"io_romio341_user_configure_params\"\u001b[0m\r\n                          (current value: \u001b[32m\"\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: string)\r\n                          User-specified command line parameters passed to\r\n"]
[2.197541, "o", "                          ROMIO's configure script\r\n         MCA io romio341: informational\r\n                          \u001b[34m\"io_romio341_complete_configure_params\"\u001b[0m (current\r\n                          value: \u001b[32m\" FROM_OMPI=yes CC='gcc' CFLAGS='-O3\r\n                          -DNDEBUG  -finline-functions -mcx16\r\n                          -D__EXTENSIONS__' CPPFLAGS='' FFLAGS='' LDFLAGS=''\r\n                          --enable-shared --disable-static   --disable-aio\r\n                          --disable-weak-symbols --enable-strict\r\n                          --disable-f77 --disable-f90\r\n                          ac_cv_lib_cuda_cuMemGetAddressRange=no\r\n                          ac_cv_lib_cudart_cudaStreamSynchronize=no\"\u001b[0m, data\r\n                          source: default, level: 9 dev/all, type: string)\r\n                          Complete set of command line parameters passed to\r\n                          ROMIO's configure script\r\n            MCA mtl base: ---------------------------------------------------\r\n            MCA mtl base: parameter \u001b[34m\"mtl\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the mtl\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n            MCA mtl base: ---------------------------------------------------\r\n"]
[2.197839, "o", "            MCA mtl base: parameter \u001b[34m\"mtl_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the mtl framework (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n             MCA op base: ---------------------------------------------------\r\n             MCA op base: parameter \u001b[34m\"op\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the op\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n             MCA op base: ---------------------------------------------------\r\n"]
[2.198452, "o", "             MCA op base: parameter \u001b[34m\"op_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the op framework (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n              MCA op avx: ---------------------------------------------------\r\n              MCA op avx: parameter \u001b[34m\"op_avx_capabilities\"\u001b[0m (current value:\r\n                          \u001b[32m\"SSE,SSE2,SSE3,SSE4.1,AVX,AVX2\"\u001b[0m, data source:\r\n                          default, level: 4 tuner/basic, type: int)\r\n                          Level of SSE/MMX/AVX support available in the\r\n                          current environment\r\n                          Valid values: Comma-delimited list of:  \u001b[36m0x1\u001b[0m|\u001b[36mSSE\u001b[0m,\r\n                          \u001b[36m0x2\u001b[0m|\u001b[36mSSE2\u001b[0m, \u001b[36m0x4\u001b[0m|\u001b[36mSSE3\u001b[0m, \u001b[36m0x8\u001b[0m|\u001b[36mSSE4.1\u001b[0m, \u001b[36m0x10\u001b[0m|\u001b[36mAVX\u001b[0m,\r\n                          \u001b[36m0x20\u001b[0m|\u001b[36mAVX2\u001b[0m, \u001b[36m0x100\u001b[0m|\u001b[36mAVX512F\u001b[0m, \u001b[36m0x200\u001b[0m|\u001b[36mAVX512BW\u001b[0m\r\n              MCA op avx: parameter \u001b[34m\"op_avx_support\"\u001b[0m (current value:\r\n                          \u001b[32m\"SSE,SSE2,SSE3,SSE4.1,AVX,AVX2\"\u001b[0m, data source:\r\n                          default, level: 4 tuner/basic, type: int)\r\n                          Level of SSE/MMX/AVX support to be used, capped by\r\n                          the local architecture capabilities\r\n                          Valid values: Comma-delimited list of:  \u001b[36m0x1\u001b[0m|\u001b[36mSSE\u001b[0m,\r\n                          \u001b[36m0x2\u001b[0m|\u001b[36mSSE2\u001b[0m, \u001b[36m0x4\u001b[0m|\u001b[36mSSE3\u001b[0m, \u001b[36m0x8\u001b[0m|\u001b[36mSSE4.1\u001b[0m, \u001b[36m0x10\u001b[0m|\u001b[36mAVX\u001b[0m,\r\n                          \u001b[36m0x20\u001b[0m|\u001b[36mAVX2\u001b[0m, \u001b[36m0x100\u001b[0m|\u001b[36mAVX512F\u001b[0m, \u001b[36m0x200\u001b[0m|\u001b[36mAVX512BW\u001b[0m\r\n            MCA osc base: ---------------------------------------------------\r\n            MCA osc base: parameter \u001b[34m\"osc\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:"]
[2.198952, "o", "\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the osc\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n            MCA osc base: ---------------------------------------------------\r\n            MCA osc base: parameter \u001b[34m\"osc_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the osc framework (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n              MCA osc sm: ---------------------------------------------------\r\n              MCA osc sm: parameter \u001b[34m\"osc_sm_backing_directory\"\u001b[0m (current\r\n                          value: \u001b[32m\"/dev/shm\"\u001b[0m, data source: default, level: 3\r\n                          user/all, type: string)\r\n                          Directory to place backing files for shared memory\r\n                          windows. This directory should be on a local\r\n                          filesystem such as /tmp or /dev/shm (default:\r\n                          (linux) /dev/shm, (others) session directory)\r\n              MCA osc sm: parameter \u001b[34m\"osc_sm_priority\"\u001b[0m (current value: \u001b[32m\"100\"\u001b[0m,\r\n                          data source: default, level: 3 user/all, type:\r\n                          unsigned_int)\r\n                          Priority of the osc/sm component (default: 100)\r\n      MCA osc monitoring: ---------------------------------------------------\r\n      MCA osc monitoring: performance \"osc_monitoring_messages_sent_count\"\r\n                          (type: unsigned_long_long, class: size)\r\n                          Number of messages sent through the OSC framework\r\n                          with each peer.\r\n      MCA osc monitoring: performance \"osc_monitoring_messages_sent_size\"\r\n                          (type: unsigned_long_long, class: size)\r\n                          Size of messages sent through the OSC framework\r\n                          with each peer.\r\n"]
[2.19949, "o", "      MCA osc monitoring: performance \"osc_monitoring_messages_recv_count\"\r\n                          (type: unsigned_long_long, class: size)\r\n                          Number of messages received through the OSC\r\n                          framework with each peer.\r\n      MCA osc monitoring: performance \"osc_monitoring_messages_recv_size\"\r\n                          (type: unsigned_long_long, class: size)\r\n                          Size of messages received through the OSC framework\r\n                          with each peer.\r\n            MCA osc rdma: ---------------------------------------------------\r\n            MCA osc rdma: parameter \u001b[34m\"osc_rdma_no_locks\"\u001b[0m (current value:\r\n                          \u001b[32m\"false\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: bool)\r\n                          Enable optimizations available only if MPI_LOCK is\r\n                          not used. Info key of same name overrides this\r\n                          value (default: false)\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA osc rdma: parameter \u001b[34m\"osc_rdma_acc_single_intrinsic\"\u001b[0m (current\r\n"]
[2.199975, "o", "                          value: \u001b[32m\"false\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: bool)\r\n                          Enable optimizations for MPI_Fetch_and_op,\r\n                          MPI_Accumulate, etc for codes that will not use\r\n                          anything more than a single predefined datatype\r\n                          (default: false)\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA osc rdma: parameter \u001b[34m\"osc_rdma_acc_use_amo\"\u001b[0m (current value:\r\n                          \u001b[32m\"true\"\u001b[0m, data source: default, level: 5\r\n"]
[2.200581, "o", "                          tuner/detail, type: bool)\r\n                          Enable the use of network atomic memory operations\r\n                          when using single intrinsic optimizations. If not\r\n                          set network compare-and-swap will be used instead\r\n                          (default: true)\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n            MCA osc rdma: parameter \u001b[34m\"osc_rdma_buffer_size\"\u001b[0m (current value:\r\n                          \u001b[32m\"32768\"\u001b[0m, data source: default, level: 3 user/all,\r\n                          type: unsigned_int)\r\n                          Size of temporary buffers (default: 32768)\r\n            MCA osc rdma: parameter \u001b[34m\"osc_rdma_max_attach\"\u001b[0m (current value:\r\n                          \u001b[32m\"64\"\u001b[0m, data source: default, level: 3 user/all,\r\n                          type: unsigned_int)\r\n                          Maximum number of buffers that can be attached to a\r\n                          dynamic window. Keep in mind that each attached\r\n                          buffer will use a potentially limited resource\r\n                          (default: 64)\r\n            MCA osc rdma: parameter \u001b[34m\"osc_rdma_priority\"\u001b[0m (current value: \u001b[32m\"20\"\u001b[0m,\r\n                          data source: default, level: 3 user/all, type:\r\n                          unsigned_int)\r\n                          Priority of the osc/rdma component (default: 20)\r\n"]
[2.201096, "o", "            MCA osc rdma: parameter \u001b[34m\"osc_rdma_locking_mode\"\u001b[0m (current value:\r\n                          \u001b[32m\"two_level\"\u001b[0m, data source: default, level: 3\r\n                          user/all, type: int)\r\n                          Locking mode to use for passive-target\r\n                          synchronization (default: two_level)\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mtwo_level\u001b[0m, \u001b[36m1\u001b[0m|\u001b[36mon_demand\u001b[0m\r\n            MCA osc rdma: parameter \u001b[34m\"osc_rdma_btls\"\u001b[0m (current value:\r\n                          \u001b[32m\"ugni,uct,ofi\"\u001b[0m, data source: default, level: 3\r\n                          user/all, type: string)\r\n                          Comma-delimited list of BTL component names to\r\n                          allow without verifying connectivity. Do not add a\r\n                          BTL to to this list unless it can reach all\r\n                          processes in any communicator used with an MPI\r\n                          window (default: ugni,uct,ofi)\r\n            MCA osc rdma: parameter \u001b[34m\"osc_rdma_backing_directory\"\u001b[0m (current\r\n                          value: \u001b[32m\"/dev/shm\"\u001b[0m, data source: default, level: 3\r\n                          user/all, type: string)\r\n                          Directory to place backing files for memory\r\n                          windows. This directory should be on a local\r\n                          filesystem such as /tmp or /dev/shm (default:\r\n                          (linux) /dev/shm, (others) session directory)\r\n            MCA osc rdma: parameter \u001b[34m\"osc_rdma_network_max_amo\"\u001b[0m (current\r\n                          value: \u001b[32m\"32\"\u001b[0m, data source: default, level: 3\r\n                          user/all, type: unsigned_long)\r\n                          Maximum predefined datatype count for which network\r\n                          atomic operations will be used. Accumulate\r\n                          operations larger than this count will use a\r\n                          get/op/put protocol. The optimal value is dictated\r\n                          by the network injection rate for the interconnect.\r\n                          Generally a smaller number will yield better larger\r\n                          accumulate performance. (default: 32)\r\n"]
[2.201618, "o", "            MCA osc rdma: parameter \u001b[34m\"osc_rdma_minimum_memory_alignment\"\u001b[0m\r\n                          (current value: \u001b[32m\"4096\"\u001b[0m, data source: default,\r\n                          level: 3 user/all, type: size_t)\r\n                          The minimum memory alignment used to allocate local\r\n                          window memory (default: 4096). This is a best\r\n                          effort approach. Alignments larger than the page\r\n                          size may not be supported.\r\n            MCA osc rdma: performance \"osc_rdma_put_retry_count\" (type:\r\n                          unsigned_long, class: counter)\r\n                          Number of times put transaction were retried due to\r\n                          resource limitations\r\n            MCA osc rdma: performance \"osc_rdma_get_retry_count\" (type:\r\n                          unsigned_long, class: counter)\r\n                          Number of times get transaction were retried due to\r\n                          resource limitations\r\n           MCA part base: ---------------------------------------------------\r\n"]
[2.202231, "o", "           MCA part base: parameter \u001b[34m\"part\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the part\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n           MCA part base: ---------------------------------------------------\r\n           MCA part base: parameter \u001b[34m\"part_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the part framework (default: 0)"]
[2.202887, "o", "\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n        MCA part persist: ---------------------------------------------------\r\n        MCA part persist: parameter \u001b[34m\"part_persist_free_list_num\"\u001b[0m (current\r\n                          value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          Initial size of request free lists\r\n        MCA part persist: parameter \u001b[34m\"part_persist_free_list_max\"\u001b[0m (current\r\n                          value: \u001b[32m\"-1\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Maximum size of request free lists\r\n        MCA part persist: parameter \u001b[34m\"part_persist_free_list_inc\"\u001b[0m (current\r\n                          value: \u001b[32m\"64\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Number of elements to add when growing request free\r\n                          lists\r\n            MCA pml base: ---------------------------------------------------\r\n            MCA pml base: parameter \u001b[34m\"pml\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:"]
[2.203473, "o", "\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the pml\r\n                          framework (<none> means use all components that can\r\n                          be found)\r\n            MCA pml base: parameter \u001b[34m\"pml_wrapper\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data\r\n                          source: default, level: 9 dev/all, type: string,\r\n                          synonym of: pml_base_wrapper)\r\n                          Use a Wrapper component around the selected PML\r\n                          component\r\n            MCA pml base: ---------------------------------------------------\r\n            MCA pml base: parameter \u001b[34m\"pml_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the pml framework (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n"]
[2.20384, "o", "            MCA pml base: parameter \u001b[34m\"pml_base_bsend_allocator\"\u001b[0m (current\r\n                          value: \u001b[32m\"basic\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: string)\r\n            MCA pml base: parameter \u001b[34m\"pml_base_wrapper\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type:\r\n                          string, synonyms: pml_wrapper)\r\n                          Use a Wrapper component around the selected PML\r\n                          component\r\n            MCA pml base: parameter \u001b[34m\"pml_base_check_pml\"\u001b[0m (current value:\r\n                          \u001b[32m\"true\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: bool)\r\n                          Whether to check the pml selections to ensure they\r\n                          all match\r\n                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n              MCA pml cm: ---------------------------------------------------\r\n              MCA pml cm: parameter \u001b[34m\"pml_cm_free_list_num\"\u001b[0m (current value:\r\n                          \u001b[32m\"4\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Initial size of request free lists\r\n              MCA pml cm: parameter \u001b[34m\"pml_cm_free_list_max\"\u001b[0m (current value:\r\n                          \u001b[32m\"-1\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Maximum size of request free lists\r\n              MCA pml cm: parameter \u001b[34m\"pml_cm_free_list_inc\"\u001b[0m (current value:\r\n"]
[2.204458, "o", "                          \u001b[32m\"64\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Number of elements to add when growing request free\r\n                          lists\r\n      MCA pml monitoring: ---------------------------------------------------\r\n      MCA pml monitoring: parameter \u001b[34m\"pml_monitoring_enable\"\u001b[0m (current value:\r\n                          \u001b[32m\"0\"\u001b[0m, data source: default, level: 4 tuner/basic,\r\n                          type: int)\r\n                          Enable the monitoring at the PML level. A value of\r\n                          0 will disable the monitoring (default). A value of\r\n                          1 will aggregate all monitoring information\r\n                          (point-to-point and collective). Any other value\r\n                          will enable filtered monitoring\r\n      MCA pml monitoring: parameter \u001b[34m\"pml_monitoring_enable_output\"\u001b[0m (current\r\n                          value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)"]
[2.204826, "o", "\r\n                          Enable the PML monitoring textual output at\r\n                          MPI_Finalize (it will be automatically turned off\r\n                          when MPIT is used to monitor communications). This\r\n                          value should be different than 0 in order for the\r\n                          output to be enabled (default disable)\r\n      MCA pml monitoring: parameter \u001b[34m\"pml_monitoring_filename\"\u001b[0m (current value:\r\n                          \u001b[32m\"\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          string)\r\n                          The name of the file where the monitoring\r\n                          information should be saved (the filename will be\r\n                          extended with the process rank and the \".prof\"\r\n                          extension). If this field is NULL the monitoring\r\n                          will not be saved.\r\n      MCA pml monitoring: performance \"pml_monitoring_flush\" (type: string,\r\n                          class: generic)\r\n                          Flush the monitoring information in the provided\r\n                          file. The filename is append with the .%d.prof"]
[2.2052, "o", "\r\n                          suffix, where %d is replaced with the processus\r\n                          rank in MPI_COMM_WORLD.\r\n      MCA pml monitoring: performance \"pml_monitoring_messages_count\" (type:\r\n                          unsigned_long_long, class: size)\r\n                          Number of messages sent to each peer through the\r\n                          PML framework.\r\n      MCA pml monitoring: performance \"pml_monitoring_messages_size\" (type:\r\n                          unsigned_long_long, class: size)\r\n                          Size of messages sent to each peer in a\r\n                          communicator through the PML framework.\r\n             MCA pml ob1: ---------------------------------------------------\r\n             MCA pml ob1: parameter \u001b[34m\"pml_ob1_verbose\"\u001b[0m (current value: \u001b[32m\"0\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type: int)\r\n             MCA pml ob1: parameter \u001b[34m\"pml_ob1_free_list_num\"\u001b[0m (current value:\r\n                          \u001b[32m\"4\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n"]
[2.205866, "o", "             MCA pml ob1: parameter \u001b[34m\"pml_ob1_free_list_max\"\u001b[0m (current value:\r\n                          \u001b[32m\"-1\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n             MCA pml ob1: parameter \u001b[34m\"pml_ob1_free_list_inc\"\u001b[0m (current value:\r\n                          \u001b[32m\"64\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n             MCA pml ob1: parameter \u001b[34m\"pml_ob1_priority\"\u001b[0m (current value: \u001b[32m\"20\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type: int)\r\n             MCA pml ob1: parameter \u001b[34m\"pml_ob1_send_pipeline_depth\"\u001b[0m (current\r\n                          value: \u001b[32m\"3\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n             MCA pml ob1: parameter \u001b[34m\"pml_ob1_recv_pipeline_depth\"\u001b[0m (current\r\n                          value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n             MCA pml ob1: parameter \u001b[34m\"pml_ob1_max_rdma_per_request\"\u001b[0m (current\r\n                          value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n             MCA pml ob1: parameter \u001b[34m\"pml_ob1_max_send_per_range\"\u001b[0m (current\r\n                          value: \u001b[32m\"4\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n             MCA pml ob1: parameter \u001b[34m\"pml_ob1_unexpected_limit\"\u001b[0m (current\r\n                          value: \u001b[32m\"128\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: unsigned_int)\r\n             MCA pml ob1: parameter \u001b[34m\"pml_ob1_use_all_rdma\"\u001b[0m (current value:\r\n                          \u001b[32m\"false\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: bool)\r\n                          Use all available RDMA btls for the RDMA and RDMA\r\n                          pipeline protocols (default: false)\r\n"]
[2.206686, "o", "                          Valid values: \u001b[36m0\u001b[0m|\u001b[36mf\u001b[0m|\u001b[36mfalse\u001b[0m|\u001b[36mdisabled\u001b[0m|\u001b[36mno\u001b[0m|\u001b[36mn\u001b[0m,\r\n                          \u001b[36m1\u001b[0m|\u001b[36mt\u001b[0m|\u001b[36mtrue\u001b[0m|\u001b[36menabled\u001b[0m|\u001b[36myes\u001b[0m|\u001b[36my\u001b[0m\r\n             MCA pml ob1: parameter \u001b[34m\"pml_ob1_allocator\"\u001b[0m (current value:\r\n                          \u001b[32m\"bucket\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: string)\r\n                          Name of allocator component for unexpected messages\r\n             MCA pml ob1: parameter \u001b[34m\"pml_ob1_accelerator_events_max\"\u001b[0m (current\r\n                          value: \u001b[32m\"400\"\u001b[0m, data source: default, level: 5\r\n                          tuner/detail, type: int)\r\n                          Number of events created by the ob1 component\r\n                          internally\r\n             MCA pml ob1: performance \"pml_ob1_unexpected_msgq_length\" (type:\r\n                          unsigned_int, class: size)\r\n                          Number of unexpected messages received by each peer\r\n                          in a communicator\r\n             MCA pml ob1: performance \"pml_ob1_posted_recvq_length\" (type:\r\n                          unsigned_int, class: size)\r\n                          Number of unmatched receives posted for each peer\r\n                          in a communicator\r\n               MCA pml v: ---------------------------------------------------\r\n"]
[2.207517, "o", "               MCA pml v: parameter \u001b[34m\"pml_v_output\"\u001b[0m (current value: \u001b[32m\"stderr\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type:\r\n                          string)\r\n               MCA pml v: parameter \u001b[34m\"pml_v_verbose\"\u001b[0m (current value: \u001b[32m\"0\"\u001b[0m, data\r\n                          source: default, level: 9 dev/all, type: int)\r\n                          Verbosity of the pml v component\r\n               MCA pml v: parameter \u001b[34m\"pml_v_vprotocol\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type:\r\n                          string, synonyms: vprotocol)\r\n                          Specify a specific vprotocol to use\r\n       MCA sharedfp base: ---------------------------------------------------\r\n       MCA sharedfp base: parameter \u001b[34m\"sharedfp\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data\r\n                          source: default, level: 2 user/detail, type:\r\n                          string)\r\n                          Default selection set of components for the\r\n                          sharedfp framework (<none> means use all components\r\n                          that can be found)\r\n       MCA sharedfp base: ---------------------------------------------------\r\n       MCA sharedfp base: parameter \u001b[34m\"sharedfp_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the sharedfp framework\r\n                          (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n MCA sharedfp individual: ---------------------------------------------------\r\n MCA sharedfp individual: parameter \u001b[34m\"sharedfp_individual_priority\"\u001b[0m (current\r\n                          value: \u001b[32m\"10\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Priority of the individual sharedfp component\r\n MCA sharedfp individual: parameter \u001b[34m\"sharedfp_individual_verbose\"\u001b[0m (current\r\n                          value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          Verbosity of the individual sharedfp component\r\n MCA sharedfp lockedfile: ---------------------------------------------------\r\n MCA sharedfp lockedfile: parameter \u001b[34m\"sharedfp_lockedfile_priority\"\u001b[0m (current\r\n                          value: \u001b[32m\"10\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Priority of the lockedfile sharedfp component\r\n"]
[2.207856, "o", " MCA sharedfp lockedfile: parameter \u001b[34m\"sharedfp_lockedfile_verbose\"\u001b[0m (current\r\n                          value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 9 dev/all,\r\n                          type: int)\r\n                          Verbosity of the lockedfile sharedfp component\r\n         MCA sharedfp sm: ---------------------------------------------------\r\n         MCA sharedfp sm: parameter \u001b[34m\"sharedfp_sm_priority\"\u001b[0m (current value:\r\n                          \u001b[32m\"30\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Priority of the sm sharedfp component\r\n         MCA sharedfp sm: parameter \u001b[34m\"sharedfp_sm_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"0\"\u001b[0m, data source: default, level: 9 dev/all, type:\r\n                          int)\r\n                          Verbosity of the sm sharedfp component\r\n           MCA topo base: ---------------------------------------------------\r\n           MCA topo base: parameter \u001b[34m\"topo\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data source:\r\n                          default, level: 2 user/detail, type: string)\r\n                          Default selection set of components for the topo\r\n                          framework (<none> means use all components that can"]
[2.208676, "o", "\r\n                          be found)\r\n           MCA topo base: ---------------------------------------------------\r\n           MCA topo base: parameter \u001b[34m\"topo_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the topo framework (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n      MCA topo treematch: ---------------------------------------------------\r\n      MCA topo treematch: parameter \u001b[34m\"topo_treematch_reorder_mode\"\u001b[0m (current\r\n                          value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 2\r\n                          user/detail, type: int)\r\n                          If set the reordering will be done in a partially\r\n                          distributed way (default=0). If\r\n                          partially-distributed only local knowledge will be\r\n                          used, possibly leading to less accurate reordering.\r\n      MCA vprotocol base: ---------------------------------------------------\r\n      MCA vprotocol base: parameter \u001b[34m\"vprotocol\"\u001b[0m (current value: \u001b[32m\"\"\u001b[0m, data\r\n                          source: default, level: 9 dev/all, type: string,\r\n                          synonym of: pml_v_vprotocol)\r\n                          Specify a specific vprotocol to use\r\n      MCA vprotocol base: ---------------------------------------------------\r\n      MCA vprotocol base: parameter \u001b[34m\"vprotocol_base_verbose\"\u001b[0m (current value:\r\n                          \u001b[32m\"error\"\u001b[0m, data source: default, level: 8 dev/detail,\r\n                          type: int)\r\n                          Verbosity level for the vprotocol framework\r\n                          (default: 0)\r\n                          Valid values: \u001b[36m-1\u001b[0m|\u001b[36mnone\u001b[0m, \u001b[36m0\u001b[0m|\u001b[36merror\u001b[0m, \u001b[36m10\u001b[0m|\u001b[36mcomponent\u001b[0m,\r\n                          \u001b[36m20\u001b[0m|\u001b[36mwarn\u001b[0m, \u001b[36m40\u001b[0m|\u001b[36minfo\u001b[0m, \u001b[36m60\u001b[0m|\u001b[36mtrace\u001b[0m, \u001b[36m80\u001b[0m|\u001b[36mdebug\u001b[0m, \u001b[36m100\u001b[0m|\u001b[36mmax\u001b[0m,\r\n                          \u001b[36m0\u001b[0m-\u001b[36m100\u001b[0m\r\n"]
[2.209378, "o", " MCA vprotocol pessimist: ---------------------------------------------------\r\n MCA vprotocol pessimist: parameter \u001b[34m\"vprotocol_pessimist_priority\"\u001b[0m (current\r\n                          value: \u001b[32m\"30\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n MCA vprotocol pessimist: parameter \u001b[34m\"vprotocol_pessimist_free_list_num\"\u001b[0m\r\n                          (current value: \u001b[32m\"16\"\u001b[0m, data source: default, level:\r\n                          9 dev/all, type: int)\r\n MCA vprotocol pessimist: parameter \u001b[34m\"vprotocol_pessimist_free_list_max\"\u001b[0m\r\n                          (current value: \u001b[32m\"-1\"\u001b[0m, data source: default, level:\r\n                          9 dev/all, type: int)\r\n MCA vprotocol pessimist: parameter \u001b[34m\"vprotocol_pessimist_free_list_inc\"\u001b[0m\r\n                          (current value: \u001b[32m\"64\"\u001b[0m, data source: default, level:\r\n                          9 dev/all, type: int)\r\n MCA vprotocol pessimist: parameter \u001b[34m\"vprotocol_pessimist_sender_based_chunk\"\u001b[0m\r\n                          (current value: \u001b[32m\"268435456\"\u001b[0m, data source: default,\r\n                          level: 9 dev/all, type: int)\r\n MCA vprotocol pessimist: parameter \u001b[34m\"vprotocol_pessimist_event_buffer_size\"\u001b[0m\r\n                          (current value: \u001b[32m\"1024\"\u001b[0m, data source: default,\r\n                          level: 9 dev/all, type: int)\r\n MCA vprotocol pessimist: parameter \u001b[34m\"vprotocol_pessimist_sender_based_file\"\u001b[0m\r\n                          (current value: \u001b[32m\"vprotocol_pessimist-senderbased\"\u001b[0m,\r\n                          data source: default, level: 9 dev/all, type:\r\n                          string)\r\n MCA vprotocol pessimist: parameter\r\n                          \u001b[34m\"vprotocol_pessimist_allow_thread_multiple\"\u001b[0m\r\n                          (current value: \u001b[32m\"0\"\u001b[0m, data source: default, level: 9\r\n                          dev/all, type: int)\r\n                          Allow the PML V to work even when the MPI library\r\n                          is initialized with MPI_THREAD_MULTIPLE support. By\r\n                          default the PML V is disabled in such instances, to\r\n                          protect applications that are not send\r\n                          deterministic.\r\n"]
[2.21529, "o", "\u001b[1m\u001b[7m#\u001b[27m\u001b[1m\u001b[0m                                                                                                                       \r \r"]
[2.217184, "o", "\u001b]2;root@chunk-core-1:~/openmpi-5.0.7\u0007\u001b]1;~/openmpi-5.0.7\u0007"]
[2.224203, "o", "\u001b]7;file://chunk-core-1/root/openmpi-5.0.7\u001b\\"]
[2.270078, "o", "\r\u001b[0m\u001b[27m\u001b[24m\u001b[J\u001b[01;32mâžœ  \u001b[36mopenmpi-5.0.7\u001b[00m \u001b[K"]
[2.270464, "o", "\u001b[?1h\u001b=\u001b[?2004h"]
[3.680119, "o", "\u001b[?2004l\r\r\n"]
